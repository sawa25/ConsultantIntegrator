[{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\n\n\n\n\n\n---\n\n\n\n\n\n\n\n\n\n -  <a href=\"http://pandas.pydata.org/\">Pandas</a> - \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445. \u041f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0437\u043d\u043e\u0439 \u043f\u0440\u0438\u0440\u043e\u0434\u044b - \u043c\u0430\u0442\u0440\u0438\u0447\u043d\u044b\u0445, \u043f\u0430\u043d\u0435\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0440\u044f\u0434\u043e\u0432. \u041f\u0440\u0435\u0442\u0435\u043d\u0434\u0443\u0435\u0442 \u043d\u0430 \u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0430\u043c\u043e\u0433\u043e \u043c\u043e\u0449\u043d\u043e\u0433\u043e \u0438 \u0433\u0438\u0431\u043a\u043e\u0433\u043e \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u043c \u043a\u043e\u0434\u043e\u043c.\nimport pandas as pd\n\n\u0412 \u043f\u0430\u043d\u0434\u0430\u0441 \u0435\u0441\u0442\u044c \u0434\u0432\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0434\u0430\u043d\u043d\u044b\u0445:\n\n- Series: \u043e\u0434\u043d\u043e\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438 (\u0447\u0430\u0449\u0435 \u0432\u0441\u0435\u0433\u043e, \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430)\n\n- DataFrame: \u0434\u0432\u0443\u0445\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0438\u043c\u0435\u0435\u0442 \u0442\u0430\u0431\u043b\u0438\u0447\u043d\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443, \u043b\u0435\u0433\u043a\u043e \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430\u043c, \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432\n\n\n\n\u041e\u0431\u0430 \u0442\u0438\u043f\u0430 \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0438\u0437 \u0441\u0430\u043c\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438:\n\n- pandas.Series(data=None, index=None, dtype=None)\n\n- pandas.DataFrame(data=None, index=None, columns=None, dtype=None)\n\n\n\n- **data** - \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0434\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443\n\n- **index** - \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0441\u0442\u0440\u043e\u043a\n\n- **columns** - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n\n- **dtype** - \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445\n\n\n\n\u041a\u0440\u043e\u043c\u0435 data, \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\n\n<body>\n\n    <div class=\"container\">\n\n        <div>\n\n            <h2>Series</h2>\n\n            <table>\n\n                <tr>\n\n                    <th></th>\n\n                    <th>\u041c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b</th>\n\n                </tr>\n\n                <tr>\n\n                    <td>0</td>\n\n                    <td>Toyota</td>\n\n                </tr>\n\n                <tr>\n\n                    <td>1</td>\n\n                    <td>Honda</td>\n\n                </tr>\n\n                <tr>\n\n                    <td>2</td>\n\n                    <td>Ford</td>\n\n                </tr>\n\n                <tr>\n\n                    <td>3</td>\n\n                    <td>Chevrolet</td>\n\n                </tr>\n\n                <tr>\n\n                    <td>4</td>\n\n                    <td>Volkswagen</td>\n\n                </tr>\n\n            </table>\n\n        </div>\n\n        <div>\n\n            <h2>DataFrame</h2>\n\n            <table>\n\n                <tr>\n\n                    <th></th>\n\n                    <th>\u043c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b</th>\n\n                    <th>\u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430</th>\n\n                    <th>\u0446\u0435\u043d\u0430</th>\n\n                </tr>\n\n                <tr>\n\n                    <td>0</td>\n\n                    <td>Toyota</td>\n\n                    <td>2022</td>\n\n                    <td>25120.60</td>\n\n                </tr>\n\n                <tr>\n\n                    <td>1</td>\n\n                    <td>Honda</td>\n\n                    <td>2021</td>\n\n                    <td>22536.90</td>\n\n                </tr>\n\n                <tr>\n\n                    <td>2</td>\n\n                    <td>Ford</td>\n\n                    <td>2020</td>\n\n                    <td>15305.10</td>\n\n                </tr>\n\n                <tr>\n\n                    <td>3</td>\n\n                    <td>Chevrolet</td>\n\n                    <td>2022</td>\n\n                    <td>21733.50</td>\n\n                </tr>\n\n                <tr>\n\n                    <td>4</td>\n\n                    <td>Volkswagen</td>\n\n                    <td>2021</td>\n\n                    <td>45345.88</td>\n\n                </tr>\n\n            </table>\n\n        </div>\n\n    </div>\n\n</body>\n## ***\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 Series (\u043e\u0434\u043d\u043e\u043c\u0435\u0440\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430)***\n\n\n\n---\n\n\n\n|  | \u041c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b |\n\n|-------|--------------|\n\n|   0   |    Toyota    |\n\n|   1   |     Honda    |\n\n|   2   |     Ford     |\n\n|   3   |  Chevrolet   |\n\n|   4   |  Volkswagen  |\n\ncar_prices = pd.Series({\n\n    'Toyota': 25000,\n\n    'Honda': 22000,\n\n    'Ford': 23000,\n\n    'Chevrolet': 21000,\n\n    'Volkswagen': 27000\n\n})\n\n\n\ncar_prices2 = pd.Series({\n\n    1:'Toyota',\n\n    2:'Honda',\n\n    3:'Ford',\n\n    4:'Chevrolet',\n\n    5:'Volkswagen',\n\n})\n\n\n\n\n\n# \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 Series\n\nprint(car_prices, end='\\n\\n')\n\nprint(car_prices2)\n\n## ***\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 DataFrame (\u0422\u0430\u0431\u043b\u0438\u0446\u044b)***\n\n\n\n---\n\n|  | \u043c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b  | \u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 |    \u0446\u0435\u043d\u0430  |\n\n|----|-------------|-------------|----------|\n\n| 0 |    Toyota    |    2022     |  25 000  |\n\n| 1 |     Honda    |    2021     |  22 000  |\n\n| 2 |     Ford     |    2020     |  15 000  |\n\n| 3 |  Chevrolet   |    2022     |  21 000  |\n\n| 4 |  Volkswagen  |    2021     |  45 000  |\n\n\n\n>**1 \u0412\u0430\u0440\u0438\u0430\u043d\u0442**\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 DataFrame\n\ndata = {\n\n    '\u043c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b': ['Toyota', 'Honda', 'Ford', 'Chevrolet', 'Volkswagen'],\n\n    '\u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430': [2022, 2021, 2020, 2022, 2021],\n\n    '\u0446\u0435\u043d\u0430': [25120.60, 22536.90, 15305.10, 21733.50, 45345.88]\n\n}\n\n\n\ndf = pd.DataFrame(data)\n\n\n\ndisplay(df)\ndf\n\n#### **\u0422\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445**\n\n\n\n\n\n---\n\n\n\n\n\n\n\n---\n\n\n\n\n\n\n\n- object - \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 \u0441\u043c\u0435\u0448\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442/\u0447\u0438\u0441\u043b\u043e\n\n- int64 - \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u0442\u0438\u043f, \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 64 \u0431\u0438\u0442\u0430\n\n- float64 - \u0442\u0438\u043f \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 (\u0432\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430), \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 64 \u0431\u0438\u0442\u0430\n\n- bool - \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 True/False\n\n- datetime64 - \u0442\u0438\u043f \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u0430\u0442 \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438\n\n- timedelta64 - \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 \u0434\u0430\u0442\u0430\u043c\u0438\n\n- category - \u0442\u0438\u043f \u0434\u043b\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 (\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439)\n\n\n\n---\n\n\n\ndisplay(df)\n\nprint(df.dtypes)\n\n> **2 \u0412\u0430\u0440\u0438\u0430\u043d\u0442**\ncolumns = ['\u043c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b', '\u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430', '\u0446\u0435\u043d\u0430']\n\n\n\ndata = [['Toyota',         '2022',        '25000'],\n\n        ['Honda',          '2021',        '22000'],\n\n        ['Ford',           '2020',        '23000'],\n\n        ['Chevrolet',      '2022',        '21000'],\n\n        ['Volkswagen',     '2021',        '27000']]\n\n\n\ndf2 = pd.DataFrame(data, columns=columns)\n\n\n\ndisplay(df2)\n\n> \u0417\u0430\u0434\u0430\u0434\u0438\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u044b\ncolumns = ['\u043c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b', '\u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430', '\u0446\u0435\u043d\u0430']\n\n\n\ndata = [['Toyota', '2022', '25000'],\n\n        ['Honda', '2021', '22000'],\n\n        ['Ford', '2020', '23000'],\n\n        ['Chevrolet', '2022', '21000'],\n\n        ['Volkswagen', '2021', '27000']]\n\n\n\nindex = [100, 200, 300, 400, 500] # \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c\u0438 !!!\n\n\n\ndf2 = pd.DataFrame(data=data, index=index, columns=columns, dtype=object)\n\n\n\n# \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443\n\ndisplay(df2)\n\nprint(df2.dtypes)\n\n> **3 \u0412\u0430\u0440\u0438\u0430\u043d\u0442**\ntext = '''\n\n      \u043c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b, \u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430, \u0446\u0435\u043d\u0430\n\n      Toyota, 2022, 35 000\n\n      Honda, 1987, 1 500\n\n      Ford, 2005, 6 000\n\n      Volkswagen, 2023, 40000\n\n'''.strip()\n\n\n\nwith open('car.csv', 'w') as f:\n\n  f.write(text)\n\n\n\n\n\ndf2 = pd.read_csv('/content/car.csv')\n\n\n\ndisplay(df2)\n\n#### `delimiter=','` (\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c)\ntext = '''\n\n      \u043c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b; \u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430; \u0446\u0435\u043d\u0430\n\n      Toyota; 2022; 35 000\n\n      Honda; 1987; 1 500\n\n      Ford; 2005; 6 000\n\n      Volkswagen; 2023; 40000\n\n'''.strip()\n\n\n\nwith open('car.csv', 'w') as f:\n\n  f.write(text)\n\n\n\n\n\ndf2 = pd.read_csv('car.csv')\n\ndf3 = pd.read_csv('car.csv', delimiter=';')\n\n\n\ndisplay(df2)\n\nprint(end='\\n\\n')\n\ndisplay(df3)\n\n### `encoding` (\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430)\ntext = '''\n\n      \u043c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b; \u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430; \u0446\u0435\u043d\u0430\n\n      Toyota; 2022; 35 000\n\n      Honda; 1987; 1 500\n\n      Ford; 2005; 6 000\n\n      Volkswagen; 2023; 40000\n\n'''.strip()\n\n\n\nwith open('car.csv', 'w', encoding='cp1251') as f:\n\n  f.write(text)\n\n\n\n\n\ndf4 = pd.read_csv('car.csv', delimiter=';', encoding='cp1251')\n\n\n\ndisplay(df4)\n\n### \u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434\u044b Pandas\ndf.to_csv('car2.csv') # \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0432 csv\n\n\u041f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043b\u0438\u0448\u043d\u0438\u044e \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044e.\ndf_car2 = pd.read_csv('car2.csv') # \u0427\u0438\u0442\u0430\u0435\u043c csv\n\ndf_car2\ndf_car2 = pd.read_csv('car2.csv', index_col=0) # \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438\n\ndf_car2\n\n\u041c\u043e\u0436\u0435\u043c \u0441\u0440\u0430\u0437\u0443 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u044b\ndf.to_csv('car2.csv', index=False) # \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0432 csv\n\ndf_car2 = pd.read_csv('car2.csv') # \u0427\u0438\u0442\u0430\u0435\u043c csv\n\ndf_car2\npd.read_\ndf.to_\n\n## ***\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u044b***\n\n\u0411\u0430\u0437\u0430 \u0432\u0438\u043d = https://drive.google.com/file/d/1I0IrgrlR-Phv1sQZHOfr1ld866yMTahE/view\n!pip install --upgrade gdown\n\n#### 1 \u0441\u043f\u043e\u0441\u043e\u0431 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nimport gdown\n\n\n\npath_download = 'https://drive.google.com/uc?id=1I0IrgrlR-Phv1sQZHOfr1ld866yMTahE'\n\n\n\ngdown.download(path_download, None, quiet=False)\n%cat wine_base.csv\ndf = pd.read_csv('/content/wine_base.csv')\n\ndf.head(2)\n\n#### 2 \u0441\u043f\u043e\u0441\u043e\u0431 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\npath_download = \"https://drive.google.com/uc?id=1I0IrgrlR-Phv1sQZHOfr1ld866yMTahE\"\ndf2 = pd.read_csv(path_download, index_col=0  )\n\ndf2\n\n\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u0438\u0434\u0430 `pd.read_\u0444\u043e\u0440\u043c\u0430\u0442()` \u0438 `pd.to_\u0444\u043e\u0440\u043c\u0430\u0442()`\n\n\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442 \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e.\n\n\n\nC\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 **csv** (***comma separated value/\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0440\u0430\u0437\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u044f\u0442\u044b\u043c\u0438***) \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html#pandas.read_csv\"> `pd.read_csv()`</a>.\n\n\n\n\u0421\u043f\u0438\u0441\u043e\u043a \u0441\u0430\u043c\u044b\u0445 \u0432\u0430\u0436\u043d\u044b\u0445 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432:\n\n - **filepath_or_buffer** - \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c (\u0430\u0434\u0440\u0435\u0441\u043e\u043c) \u0444\u0430\u0439\u043b\u0430;\n\n - **sep** - \u0441\u0438\u043c\u0432\u043e\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u044b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430 \u0432 \u0444\u0430\u0439\u043b\u0435 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `\",\"`);\n\n - **header** - \u043d\u043e\u043c\u0435\u0440 \u0441\u0442\u0440\u043e\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432 \u0444\u0430\u0439\u043b\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 (**`None`**, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442);\n\n - **names** - \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u043c\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432;\n\n - **index_col** - \u0441\u0442\u043e\u043b\u0431\u0435\u0446, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0430\u0434\u043e \u0432\u0437\u044f\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432\n\n - **usecols** - \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0438\u0437 \u0444\u0430\u0439\u043b\u0430\n\ndf = pd.read_csv('wine_base.csv', index_col=0)\n\ndf\n\n### ***\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432*** (parameter = names)\nnew_names = ['\u0441\u0442\u0440\u0430\u043d\u0430', '\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435', '\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435', '\u0431\u0430\u043b\u043b\u044b', '\u0446\u0435\u043d\u0430', '\u043f\u0440\u043e\u0432\u0438\u043d\u0446\u0438\u044f', '\u0440\u0435\u0433\u0438\u043e\u043d_1', '\u0440\u0435\u0433\u0438\u043e\u043d_2', '\u0441\u043e\u0440\u0442', '\u0432\u0438\u043d\u043e\u0434\u0435\u043b\u044c\u043d\u044f']\n\n\n\ndf_rus = pd.read_csv('wine_base.csv', names=new_names, index_col=0, header=1)\n\ndf_rus.head()", "metadata": {"subid": 0, "total": 3, "source": "https://colab.research.google.com/drive/1Z-WIfMZi7ckPHRSXfd9wanzoecrvgVbM?usp=sharing"}}}, {"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\n### ***\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438*** (parameter = usecols)\ndata3 = pd.read_csv('wine_base.csv', usecols=['country', 'points', 'price'])\n\ndata3.head()\ndata3\n\n### ***\u0417\u0430\u0434\u0430\u0442\u044c \u043a\u043e\u043b-\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0438 \u0441\u0442\u0440\u043e\u043a \u043f\u0440\u0438 \u0432\u044b\u0432\u043e\u0434\u0435***\nMaxDF = pd.read_csv('/content/sample_data/mnist_test.csv')\n\nMaxDF\nMaxDF[:100]\n\n\n> \u0420\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443\npd.set_option(\"display.max_columns\", 300)\n\npd.set_option(\"display.max_rows\", 500)\nMaxDF = pd.read_csv('/content/sample_data/mnist_test.csv')\n\nMaxDF\nMaxDF[:500]\n\n### **loc** / **iloc**\ndata3.head()\ndata3.loc[1, 'price']\ndata3.iloc[1, 2]\ndata3.loc[1:3, ['points', 'price']]\ndata3.iloc[1:3, 1:]\n\n## ***\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435***\n\n\n\n---\n\n\n\n\n\n\n\n\u0412 Pandas \u0435\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 DataFrame:\n\n\n\n***\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438:***\n\n- data.drop(index) - \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438\n\n- data.drop(labels, axis=0) - \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u0432 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u0435\n\n\n\n***\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0446\u044b:***\n\n- data.drop(columns) - \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u043c\u0435\u043d\u0430\u043c\u0438\n\n- data.drop(labels, axis=1) - \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u0432 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n\n\n\n***\u0423\u0434\u0430\u043b\u0438\u0442\u044c duplicates:***\n\n- data.drop_duplicates() - \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b \u0441\u0442\u0440\u043e\u043a\n\n\n\n***\u0423\u0434\u0430\u043b\u0438\u0442\u044c NaN:***\n\n- data.dropna() - \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438/\u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0441 NaN \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438\n\n\n\n\n\ndf_rus.head(2)\n# \u0423\u0434\u0430\u043b\u0438\u043c 2 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\n\ndf_rus.drop(columns=['\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435', '\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435'], inplace=True)\ndf_rus.head()\n# \u0423\u0434\u0430\u043b\u0438\u043c 2 \u0441\u0442\u0440\u043e\u043a\u0443\n\ndf_rus.drop(2, inplace=True)\ndf_rus.head()\ndf_rus.tail()\ndf_rus[-3:].index\ndf_rus = df_rus.drop(df_rus[-3:].index)\n\ndf_rus.tail()\n\n## ***\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435***\n\n\n\n---\n\n\n\n\n\n\n\n\n\n---\n\n\n\n\n\n***\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443:***\n\n\n\n- `df.loc[index] = [values]` - \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0438\u043d\u0434\u0435\u043a\u0441\u0443\n\n\n\n***\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446:***\n\n\n\n- `df[column_name] = [values]` - \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u043f\u043e \u0438\u043c\u0435\u043d\u0438\n\n- `df.insert(loc, column, values)` - \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443\n\n\n\n***\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u044f\u0447\u0435\u0439\u043a\u0438:***\n\n\n\n- `df.loc[row, column]` = value - \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0435/\u0441\u0442\u043e\u043b\u0431\u0446\u0443\n\n- `df.fillna(values)` - \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u044f\u0447\u0435\u0439\u043a\u0438\n\n\n\n---\n\n\n\n\n\n\n\n---\n\n\n\n### ***\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0438 \u0441\u0442\u0440\u043e\u043a***\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n\ncolumns = ['A', 'H', 'T', 'P']\n\n\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u044f\u0447\u0435\u0435\u043a\n\nvalues = [[1, 2, 3, 4],\n\n          [5, 6, 7, 8],\n\n          [9, 10, 11, 12],\n\n          [13, 14, 15, 16]]\n\n\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0438\u0437 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0432\u044b\u0432\u043e\u0434 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\n\ndf = pd.DataFrame(values, columns=columns)\n\ndf\n\n#### \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446\ndf['B'] = [1,1,1,1]\n\ndf\ndf.loc[:, 'B'] = [2, 2, 2, 2]\n\ndf\n\n#### \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u043a \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0432\u044b\u0448\u0435\ndf.loc[4] = [0,0,0,0,0]\n\ndf\n\n#### \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\ndf.iloc[0, 1] = 200\n\ndf\ndf.loc[1, 'P'] = 99\n\ndf\n\n### \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0446\u044b\ndf = df.drop(columns=['B'])\n\ndf\n\n### \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043f\u0438\u0438\ndata_backup = df.copy()\n\n### \u041a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u044f 2 \u0442\u0430\u0431\u043b\u0438\u0446\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n\ncolumns = ['t', 'G', 'C']\n\n\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u044f\u0447\u0435\u0435\u043a\n\nvalues = [[10, 20, 30],\n\n          [50, 60, 70],\n\n          [90, 100, 110],\n\n          [130, 140, 150],\n\n          [170, 180, 190]]\n\n\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0438\u0437 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0432\u044b\u0432\u043e\u0434 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\n\ndf_2 = pd.DataFrame(values, columns=columns)\n\ndisplay(df_2)\n\ndf_2.shape\nNEW_table = pd.concat([df, df_2], axis=1)\n\nNEW_table\n\n### ***\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430***\n\n\n\n---\n\n\n\n- **sort_values(axis=0)** \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0430\u043c (\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c \u043e\u0441\u0438 0**) >> default=0**\n\n- **sort_values(axis=1)** \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c (\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c \u043e\u0441\u0438 1)\n#### \u041f\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0443\ndf = df.sort_values('H', ascending=True) # ascending=False -> \u041f\u043e \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e\n\ndf\n\n#### \u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0438\u043d\u0434\u0435\u043a\u0441\ndf.index = [0,1,2,3,4]\n\ndf\n\n#### \u041f\u043e \u0441\u0442\u0440\u043e\u043a\u0435\ndf = df.sort_values(by=4, axis=1, ascending=True) # by=4, axis=1 \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0438, ascending=True \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e\n\ndf\ndf = df.sort_values(by='P', axis=0, ascending=True) # by=4, axis=1 \u044d\u0442\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u044b, ascending=True \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e\n\ndf\ndf = df.reset_index(drop = True)\n\ndf\n\n#### \u041f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\nNEW_table = NEW_table[['C','H','A','t', 'G', 'P', 'T']]\n\nNEW_table\n\n### \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\n> \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\ndf.to_csv('new_salen_train.csv', index=False)\n\n# df = pd.read_csv('new_salen_train.csv')\n\n>\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043d\u0430 Google \u0434\u0438\u0441\u043a\ndf.to_csv('/content/drive/My Drive/\u0411\u0430\u0437\u044b/hh_parsed.csv', sep=';', encoding='cp1251')\n\n##  ***\u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445***\n\n\n\n---\n\n\n\nnew_names = ['\u0441\u0442\u0440\u0430\u043d\u0430', '\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435', '\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435', '\u0431\u0430\u043b\u043b\u044b', '\u0446\u0435\u043d\u0430', '\u043f\u0440\u043e\u0432\u0438\u043d\u0446\u0438\u044f', '\u0440\u0435\u0433\u0438\u043e\u043d_1', '\u0440\u0435\u0433\u0438\u043e\u043d_2', '\u0441\u043e\u0440\u0442', '\u0432\u0438\u043d\u043e\u0434\u0435\u043b\u044c\u043d\u044f']\n\n\n\ndf_rus = pd.read_csv('wine_base.csv', names=new_names, index_col=0, header=0)\n\ndf_rus.head()\n\n\u041c\u0435\u0442\u043e\u0434 .`shape` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\ndf_rus.shape\n\n\u041c\u0435\u0442\u043e\u0434 .size \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435:\ndf_rus.size\n\n\u0418\u043d\u043e\u0433\u0434\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u044f\u0447\u0435\u0439\u043a\u0430\u0445 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u044b. \u042d\u0442\u043e \u0441\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043f\u043e \u0440\u0430\u0437\u043d\u044b\u043c \u043f\u0440\u0438\u0447\u0438\u043d\u0430\u043c: \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435 \u0431\u044b\u043b\u043e, \u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0447\u0435\u043b\u043e\u0432\u0435\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u043b \u0442\u0430\u0431\u043b\u0438\u0446\u0443, \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b \u044f\u0447\u0435\u0439\u043a\u0443.\n\n\n\n\u041c\u0435\u0442\u043e\u0434 `.count()` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e *\u043d\u0435\u043f\u0443\u0441\u0442\u044b\u0445* \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u0435:\n> \u0414\u043e\u043b\u044f \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\nprint(df_rus.shape, end='\\n\\n')\n\ndisplay(df_rus.count())\n\nprint()\n\ndisplay(df_rus.isna().sum())\npd.DataFrame({\n\n    'count': df_rus.count(),\n\n    'isna': df_rus.isna().sum(),\n\n    'percent': round((df_rus.isna().sum() / df_rus.shape[0]) * 100, 3)\n\n})\ndf_rus.head()\ndf_rus.isna().head()\n# @title \u0413\u0440\u0430\u0444\u0438\u043a data.count\n\nData = df_rus.head(100) # @param {type:\"raw\"}\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n\nsns.set_style('darkgrid')\n\n\n\nplt.figure(figsize=(14,3))\n\ncounts = Data.count()\n\nax = counts.plot.bar()\n\nax.set_xlabel('\u0421\u0442\u043e\u043b\u0431\u0446\u044b', c='r')\n\nax.set_ylabel('\u041a\u043e\u043b-\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439', c='b')\n\nax.set_title('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0435\u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043f\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c', c='gray')\n\n\n\n\n\nplt.show()\n\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 .head(), \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043c\u0435\u0442\u043e\u0434 .count() \u0442\u043e\u043b\u044c\u043a\u043e \u043a \u043f\u0435\u0440\u0432\u044b\u043c \u0441\u0442\u0430 \u0441\u0442\u0440\u043e\u043a\u0430\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u044b:\ndf_rus.head(100).count() # 0 - 100\n\n### ***\u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439***\n#### *\u0412 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u0432\u0437\u044f\u0442\u043e\u043c \u0441\u0442\u043e\u0431\u0446\u0435*\ndf_rus.head(1)\ndf_rus['\u0446\u0435\u043d\u0430'].fillna('\u0411\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e !', inplace=True)\ndf_rus['\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435'].fillna('\u041f\u043e\u0440\u0442\u0432\u0435\u0439\u043d', inplace=True)\ndf_rus.count()\n\n#### *\u0412\u043e \u0432\u0441\u0435\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435*\ndf_rus = df_rus.fillna('\u041e\u0448\u0438\u0431\u043e\u0447\u043a\u0430')\ndf_rus.count()\n\n### ***\u0418\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f***\ndf_rus[444:600].count() # 444 - 600\ndf_rus[80:100:5]\ndf_rus[[\"\u0431\u0430\u043b\u043b\u044b\"]]\ndf_rus[[\"\u0431\u0430\u043b\u043b\u044b\", \"\u0446\u0435\u043d\u0430\"]][:10:2]\n\n### ***\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445***\nmaska = df_rus['\u0446\u0435\u043d\u0430'] > 1000\n\ndf_rus[maska]\ndf_rus.info()\n\n#### *\u0417\u0430\u043c\u0435\u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439*\ndf_rus['\u0446\u0435\u043d\u0430'] = df_rus['\u0446\u0435\u043d\u0430'].replace('\u0411\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e !', 0)\ndf_rus[\"\u0446\u0435\u043d\u0430\"] = df_rus[\"\u0446\u0435\u043d\u0430\"].astype(\"int64\")\n\ndf_rus.info()\ndf_rus.loc[maska, '\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435']\nmaska = df_rus['\u0446\u0435\u043d\u0430'] > 1000\n\ndf_rus[maska]\n\n### `.loc` // `.iloc`\ndf_rus.loc[:10, ['\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435', '\u0446\u0435\u043d\u0430']]\ndf_rus.iloc[:10, 2:4]\ndf_rus.loc[maska]\n\ndf_rus.loc[df_rus.\u0446\u0435\u043d\u0430 > 1000]\n\n#### *\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u0434\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0439 **Pandas** \u0438 \u0446\u0438\u043a\u043b\u043e\u0432 **Python**...* \ud83d\udd54\n\u2753\u2753 \u0417\u0430\u0447\u0435\u043c `.loc`, \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c `df[]` \u2753\u2753\n#@title \u0414\u0435\u043b\u0430\u0435\u043c 3 000 000 \u0441\u0442\u0440\u043e\u043a\n\ndata = pd.read_csv('/content/sample_data/california_housing_test.csv')\n\ndf = [data] * 1000 # [] \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 100 \u043a\u043e\u043f\u0438\u0439 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 data, \u0438 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u044d\u0442\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0441\u0441\u044b\u043b\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 data, \u0430 \u043d\u0435 \u043d\u0430 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u043e\u0431\u044a\u0435\u043a\u0442.\n\n\n\n# \u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0430\u043c\n\ndf= pd.concat(df, axis=0)\n\n\n\n# \u0432\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n\ndf.shape\n# \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f housing_median_age\n\ndef transform_housing_median_age(data):\n\n    # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0443\u0441\u0442\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n\n    new_values = []\n\n    # \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0435 housing_median_age\n\n    for value in data.housing_median_age:\n\n        # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0438 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043d\u0438\u043c\u0438\n\n        if value <= 15:\n\n            new_value = 0\n\n        elif 15 < value <= 30:\n\n            new_value = 1\n\n        else:\n\n            new_value = 2\n\n        # \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\n\n        new_values.append(new_value)\n\n    # \u0437\u0430\u043c\u0435\u043d\u0430 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 housing_median_age \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n\n    data.housing_median_age = new_values\n\n    # \u0432\u043e\u0437\u0432\u0440\u0430\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430\n\n    return data", "metadata": {"subid": 1, "total": 3, "source": "https://colab.research.google.com/drive/1Z-WIfMZi7ckPHRSXfd9wanzoecrvgVbM?usp=sharing"}}}, {"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\n`%%time`, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0437\u0430\u0442\u0440\u0430\u0447\u0435\u043d\u043d\u043e\u043c \u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u0432 \u044d\u0442\u043e\u0439 \u044f\u0447\u0435\u0439\u043a\u0435. \u042d\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u0432 \u0441\u0435\u0431\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432:\n\n\n\n1. `CPU times`: \u042d\u0442\u043e\u0442 \u0431\u043b\u043e\u043a \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043e\u0431\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f, \u0437\u0430\u0442\u0440\u0430\u0447\u0435\u043d\u043d\u043e\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u043e\u043c \u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430. \u0412 \u0432\u0430\u0448\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u044d\u0442\u043e 1.57 \u0441\u0435\u043a\u0443\u043d\u0434\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438 102 \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u043e\u0442\u0440\u0430\u0436\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440 \u0437\u0430\u0442\u0440\u0430\u0442\u0438\u043b \u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u0430\u0448\u0438\u043c \u043a\u043e\u0434\u043e\u043c, \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0432\u0440\u0435\u043c\u044f, \u0437\u0430\u0442\u0440\u0430\u0447\u0435\u043d\u043d\u043e\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u043e\u043c \u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0441 \u0432\u0430\u0448\u0438\u043c \u043a\u043e\u0434\u043e\u043c.\n\n\n\n2. `total`: \u042d\u0442\u043e\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043e\u0431\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f, \u0437\u0430\u0442\u0440\u0430\u0447\u0435\u043d\u043d\u043e\u0435 \u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430. \u041e\u043d \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f.\n\n\n\n3. `Wall time`: \u042d\u0442\u043e\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043b\u043e\u0441\u044c \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u0434\u0430 \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430 \u0434\u043e \u043a\u043e\u043d\u0446\u0430. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0441\u0443\u043c\u043c\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u0444\u0430\u043a\u0442\u043e\u0440\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u0438 \u0432\u0432\u043e\u0434\u0430-\u0432\u044b\u0432\u043e\u0434\u0430 \u0438\u043b\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0437\u0430\u0434\u0430\u0447\u0430\u043c\u0438.\n\n\n\n%%time\n\ndf = transform_housing_median_age(df)\n%%time\n\ndf[df.housing_median_age <= 15] = 0\n\ndf[(df.housing_median_age > 15)&(df.housing_median_age <= 30)] = 1\n\ndf[df.housing_median_age > 30] = 2\n%%time\n\ndf.loc[df.housing_median_age <= 15, 'housing_median_age'] = 0\n\ndf.loc[(df.housing_median_age > 15)&(df.housing_median_age <= 30), 'housing_median_age'] = 1\n\ndf.loc[df.housing_median_age > 30, 'housing_median_age'] = 2\n\n|  \u0421\u043f\u043e\u0441\u043e\u0431 | \u0412\u0440\u0435\u043c\u044f |    \n\n|---------|-------|\n\n| Python  | 1680  |\n\n| .loc    | 38.6  |\n\n| Pandas  | 152   |\ndf.loc[df.housing_median_age <= 15, 'housing_median_age'] = 0\n#@title \u0413\u0440\u0430\u0444\u0438\u043a\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n\nsns.set_style('darkgrid')\n\n\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f\n\nresults = [152, 38.6, 1680] # \u0432 \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445\n\nlabels = [\"Pandas\", \"Pandas .loc\", \"Python \u0446\u0438\u043a\u043b\u044b\"]\n\n\n\nplt.figure(figsize=(12,2)) # \u0418\u0437\u043c\u0435\u043d\u0438\u043c \u0440\u0430\u0437\u043c\u0435\u0440 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u043d\u0430 \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0439\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u043e\u043b\u0431\u0447\u0430\u0442\u043e\u0439 \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b\n\nplt.barh(labels, results, color=[\"g\", \"b\", \"m\"]) # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e barh \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n\n\n\n# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439 \u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\n\nplt.xlabel(\"\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f (\u043c\u0441)\") # \u041f\u0435\u0440\u0435\u043d\u0435\u0441\u0435\u043c \u043f\u043e\u0434\u043f\u0438\u0441\u044c \u043d\u0430 \u043e\u0441\u044c X\n\nplt.ylabel(\"\u0421\u043f\u043e\u0441\u043e\u0431 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u0434\u0430\") # \u041f\u0435\u0440\u0435\u043d\u0435\u0441\u0435\u043c \u043f\u043e\u0434\u043f\u0438\u0441\u044c \u043d\u0430 \u043e\u0441\u044c Y\n\nplt.title(\"\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u0434\u0430 \u0432 Python\")\n\n\n\n# \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0433\u0440\u0430\u0444\u0438\u043a\n\nplt.show()\ndf_rus.loc[maska]\n\ndf_rus.loc[df_rus.\u0446\u0435\u043d\u0430 > 1000, ['\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435', '\u0431\u0430\u043b\u043b\u044b', '\u0446\u0435\u043d\u0430']]\ndf_rus.loc[df_rus.\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435=='\u041f\u043e\u0440\u0442\u0432\u0435\u0439\u043d', '\u0431\u0430\u043b\u043b\u044b'] = 100\n\ndf_rus.loc[df_rus.\u0446\u0435\u043d\u0430 > 1000, ['\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435', '\u0431\u0430\u043b\u043b\u044b', '\u0446\u0435\u043d\u0430']]\ndf_rus.loc[((df_rus.\u0431\u0430\u043b\u043b\u044b == 100) & (df_rus.\u0441\u0442\u0440\u0430\u043d\u0430 =='France')), ['\u0431\u0430\u043b\u043b\u044b','\u0441\u0442\u0440\u0430\u043d\u0430', '\u0446\u0435\u043d\u0430']]\n\n### \u041e\u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438\n\u0422\u0435\u043f\u0435\u0440\u044c \u0438\u0437\u0443\u0447\u0438\u0442\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0433\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430:\ndf_rus.shape\ndf_rus.iloc[0]\ndf_rus.describe()\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `include=['O']` \u043c\u0435\u0442\u043e\u0434\u0430 `.describe()` \u0432\u044b\u0432\u0435\u0434\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:\n\n\n\n- **count** - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\n\n- **unique** - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\n\n- **top** - \u0441\u0430\u043c\u044b\u0439 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\n\n- **freq** - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0441\u0430\u043c\u044b\u0439 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\ndf_rus.describe(include=['O'])\n\n### ***\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f***\ndf_rus['\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435'].unique()\ndf_rus['\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435'].nunique()\n\n### \u0427\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 Excel.\n\u0427\u0442\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0432 Excel \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Pandas \u043c\u043e\u0436\u043d\u043e \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 sheet_name.\n\n\n\n\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0435\u0435 \u0438\u043c\u044f \u0438\u043b\u0438 \u043d\u043e\u043c\u0435\u0440:\nimport pandas as pd\n\n\n\n# \u0447\u0442\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b (\u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u043d\u0443\u043b\u044f)\n\ndf = pd.read_excel('file.xlsx', sheet_name=0)\n\n\n\n# \u0447\u0442\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043f\u043e \u0438\u043c\u0435\u043d\u0438\n\ndf = pd.read_excel('file.xlsx', sheet_name='Sheet1')\n\n\n\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0446, \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043c\u0435\u043d \u0438\u043b\u0438 \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u0441\u0442\u0440\u0430\u043d\u0438\u0446:\n# \u0447\u0442\u0435\u043d\u0438\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\n\ndf = pd.read_excel('file.xlsx', sheet_name=['Sheet1', 'Sheet2'])\n\n\n\n# \u0447\u0442\u0435\u043d\u0438\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043f\u043e \u043d\u043e\u043c\u0435\u0440\u0430\u043c\n\ndf = pd.read_excel('file.xlsx', sheet_name=[0, 1])\n\n\n\u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432\u0441\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0432 Excel-\u0444\u0430\u0439\u043b\u0435, \u0443\u043a\u0430\u0437\u0430\u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 sheet_name=None. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 Pandas \u0432\u0435\u0440\u043d\u0435\u0442 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u044e\u0447\u0435\u0439 \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 DataFrame \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439:\n# \u0447\u0442\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\n\ndfs = pd.read_excel('file.xlsx', sheet_name=None)\n\n\n\n# \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 DataFrame \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n\ndf = dfs['Sheet1']\n\n\n#  ***Sketch***\n\n(\u043f\u043e\u043c\u043e\u0449\u043d\u0438\u043a, \u043d\u0430 \u0431\u0430\u0437\u0435 \u0418\u0418)\n\n---\n\n\n\n.sketch.ask\n\n\n\nAsk - \u044d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u0432 sketch, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u0432\u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445\n\n\n\n\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Ask \u043c\u043e\u0436\u043d\u043e \u0443\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043e \u0434\u0430\u043d\u043d\u044b\u0445, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043b\u0443\u0447\u0448\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u0437\u0430\u0434\u0430\u0442\u044c \u0433\u0438\u043f\u043e\u0442\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u00ab\u041a\u0430\u043a \u0431\u044b \u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b X \u0441 \u044d\u0442\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438?\u00bb \u0438 \u0431\u043e\u043b\u0435\u0435.\n%%capture\n\n%pip install sketch\n\n\n\nimport sketch\n\ndef ans(df):\n\n    answer = input('\u0412\u043e\u043f\u0440\u043e\u0441:')\n\n    df.sketch.ask(f'{answer}, \u043e\u0442\u0432\u0435\u0442\u044c \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435')\n\n\n\ndef how(df):\n\n  h = input('\u0412\u043e\u043f\u0440\u043e\u0441: ')\n\n  df.sketch.howto(f'{h}, \u043e\u0442\u0432\u0435\u0447\u0430\u0439 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435. \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043f\u0438\u0448\u0438 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435.')\ndf_rus\nans(df)\nans(df_rus)\nhow(df_rus)\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 unique() \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0435 \"\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\"\n\nunique_values = df['\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435'].unique()\n\n\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 len() \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n\ncount_unique_values = len(unique_values)\n\n\n\n# \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\n\nprint(\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0435 '\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435':\", count_unique_values)\ndf.\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435.nunique()\nhow(df_rus)\ndf.loc[df['\u0431\u0430\u043b\u043b\u044b'] == 100, '\u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435']\nhow(df_rus)\nprint(\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u0438\u0445 \u0432\u0438\u043d:\", df['\u0441\u0442\u0440\u0430\u043d\u0430'].value_counts()['US'])\nhow(df_rus)\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n\n\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0433\u0440\u0430\u0444\u0438\u043a \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043f\u043e \u0446\u0435\u043d\u0430\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 seaborn\n\nsns.boxplot(x=df['\u0446\u0435\u043d\u0430'])\n\n\n\n# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u0438 \u043e\u0441\u0435\u0439\n\nplt.title('\u0413\u0440\u0430\u0444\u0438\u043a \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043f\u043e \u0446\u0435\u043d\u0430\u043c')\n\nplt.xlabel('\u0426\u0435\u043d\u0430')\n\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e')\n\n\n\n# \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c \u0433\u0440\u0430\u0444\u0438\u043a\n\nplt.show()\n\n\u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b skiprows \u0438 skipfooter, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0438/\u0438\u043b\u0438 \u043a\u043e\u043d\u0446\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 usecols, \u0447\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c.", "metadata": {"subid": 2, "total": 3, "source": "https://colab.research.google.com/drive/1Z-WIfMZi7ckPHRSXfd9wanzoecrvgVbM?usp=sharing"}}}]