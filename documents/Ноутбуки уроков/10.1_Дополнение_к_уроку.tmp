[{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\n\n\u0412 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0443\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u043d\u044b\u0435 \u0431\u0430\u0437\u044b \u0434\u043b\u044f \u0438\u0445 \u043e\u0431\u0449\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u0431\u0430\u0437\u044b, \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0447\u0430\u043d\u043a\u0438 \u0438\u0437 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u043e\u0439 \u0431\u0430\u0437\u044b. \u0412\u043e\u0442 \u043a\u0430\u043a \u044d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c:\n# \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438:\n!pip install -q langchain_openai==0.0.2 faiss-cpu==1.7.4 openai==1.6.1 tiktoken==0.5.2 langchain_community==0.0.11 langchain==0.1.0\n# \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u044d\u0442\u0443 \u044f\u0447\u0435\u0439\u043a\u0443, \u0435\u0441\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u0432 \u043a\u043e\u043b\u0430\u0431\u0435\n\n\n\nfrom openai import OpenAI\n\nimport os\n\nfrom google.colab import userdata\n\n# \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 API \u043a\u043b\u044e\u0447\u0430 \u0438\u0437 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 Colab \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0435\u0433\u043e \u043a\u0430\u043a \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b\n\nkey = userdata.get('OPENAI_API_KEY')\n\nos.environ[\"OPENAI_API_KEY\"] = key\n\n\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 OpenAI \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c API \u043a\u043b\u044e\u0447\u0430 \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u044b\n\nclient = OpenAI()\nfrom langchain_openai import OpenAIEmbeddings\n\nfrom langchain.text_splitter import CharacterTextSplitter\n\nfrom langchain_community.vectorstores import FAISS\n\nimport requests\n\nimport re\n\nimport tiktoken\n\nfrom langchain.docstore.document import Document\n\n# \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0411\u0417, \u0434\u0435\u043b\u0438\u043c \u043d\u0430 \u0447\u0430\u043d\u043a\u0438, \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u044d\u043c\u0431\u0435\u0434\u0434\u0438\u043d\u0433\u0438, \u0441\u043e\u0437\u0434\u0430\u0435\u043c 2 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u044b\u0435 \u0431\u0430\u0437\u044b Faiss:\n# \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u0438\u0437 \u0433\u0443\u0433\u043b \u0434\u0440\u0430\u0439\u0432\n\ndef load_document_text(url):\n\n    # Extract the document ID from the URL\n\n    match_ = re.search('/document/d/([a-zA-Z0-9-_]+)', url)\n\n    if match_ is None:\n\n        raise ValueError('Invalid Google Docs URL')\n\n    doc_id = match_.group(1)\n\n\n\n    # Download the document as plain text\n\n    response = requests.get(f'https://docs.google.com/document/d/{doc_id}/export?format=txt')\n\n    response.raise_for_status()\n\n    text = response.text\n\n\n\n    return text\n# \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0411\u0417\n\ndb_1=load_document_text(\"https://docs.google.com/document/d/1CadgV8oI_MgYZBfaIEa5vAnrQXyme1qK-qIHFwlZL58/edit?usp=sharing\")\n\ndb_1\n# \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c 2 \u0411\u0417:\n\ndb_2=load_document_text(\"https://docs.google.com/document/d/1VnnEk1-DASWaBUa5dMTeZvuAMjqgpY_K86trhCvx5TI/edit?usp=sharing\")\n\ndb_2\n# \u0414\u0435\u043b\u0438\u043c \u043d\u0430 \u0447\u0430\u043d\u043a\u0438 1 \u0411\u0417:\n\ndb_1_chunks=[]\n\nsplitter = CharacterTextSplitter(separator='<Chunk>')\n\nfor chunk in splitter.split_text(db_1):\n\n    db_1_chunks.append(Document(page_content=chunk, metadata={\"meta\":\"data\"}))\n\nprint(\"\u041e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0430\u043d\u043a\u043e\u0432: \", len(db_1_chunks))\n# \u0414\u0435\u043b\u0438\u043c \u043d\u0430 \u0447\u0430\u043d\u043a\u0438 2 \u0411\u0417:\n\ndb_2_chunks=[]\n\nsplitter = CharacterTextSplitter(separator='<Chunk>')\n\nfor chunk in splitter.split_text(db_2):\n\n    db_2_chunks.append(Document(page_content=chunk, metadata={\"meta\":\"data\"}))\n\nprint(\"\u041e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0430\u043d\u043a\u043e\u0432: \", len(db_2_chunks))\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c 2 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u044b\u0435 \u0431\u0430\u0437\u044b:\n\nembeddings = OpenAIEmbeddings()\n\ndb_1_faiss = FAISS.from_documents(db_1_chunks, embeddings)\n\ndb_2_faiss = FAISS.from_documents(db_2_chunks, embeddings)\n\n# \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0434\u0432\u0435 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u044b\u0435 \u0431\u0430\u0437\u044b:\nmerged_db = FAISS.from_documents(db_1_faiss.docstore._dict.values(), embeddings)  # \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0435 \u043d\u043e\u0432\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 db1\n\nmerged_db.merge_from(db_2_faiss)  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 db2\n\n\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043b\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 db_1_faiss \u0438 db_2_faiss \u0432 merged_db. \u0422\u0435\u043f\u0435\u0440\u044c merged_db \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0438\u0437 \u043e\u0431\u0435\u0438\u0445 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445. \u041a\u0430\u0436\u0434\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c, \u0433\u0434\u0435 \u043a\u043b\u044e\u0447\u043e\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440, \u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c - \u043e\u0431\u044a\u0435\u043a\u0442 Document, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435.\n# \u0432\u043e\u0442 \u0442\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u0443\u044e \u0431\u0430\u0437\u0443 (\u043d\u0430 \u0432\u0441\u0435 \u0447\u0430\u043d\u043a\u0438)\n\nmerged_db.docstore._dict\n\n# \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0447\u0430\u043d\u043a\u0430 \u043f\u043e \u0435\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443\n# \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e \u043a\u043b\u044e\u0447\u0443 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0442 \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f (\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e)\n\nmerged_db.delete(ids=['4bd4da36-e82f-4cf1-b778-b6804628f673'])\n# \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c - \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0433\u043e \u0447\u0430\u043d\u043a\u0430\n\nmerged_db.docstore._dict", "metadata": {"subid": 0, "total": 1, "source": "https://colab.research.google.com/drive/1INaVq7szduVwZOj8X3trM8Gh00mFc-AZ?usp=sharing"}}}]