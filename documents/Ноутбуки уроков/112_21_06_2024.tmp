[{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\n\n### \u0414\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435: \u0410\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 LLM \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\n\n\n**\u0426\u0435\u043b\u044c \u0437\u0430\u0434\u0430\u043d\u0438\u044f:** \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b \u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u0440\u043e\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u044f\u0437\u044b\u043a\u043e\u0432\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.\n\n\n\n**\u041c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f:**\n\n\n\n1. **\u0411\u0430\u0437\u0430 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430:** [\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445](https://drive.google.com/file/d/1-gRMM-kX0WbCwFWzSr-6mvj-HZx9tGFf/view?usp=sharing). \u042d\u0442\u0430 \u0431\u0430\u0437\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438.\n\n2. **\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439:** [\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0432\u043e\u043f\u0440\u043e\u0441\u044b](https://drive.google.com/file/d/1DyVljnB5K5cHX_Mod0P9CPxBE6syGH4n/view?usp=sharing). \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439.\n\n3. **\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0431\u0430\u0437\u0430:** [\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0431\u0430\u0437\u0443](https://drive.google.com/file/d/1gY2LYmEsdLLDJyl0kWhrthCtEncKCOd-/view?usp=sharing). \u041c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u0443 \u0431\u0430\u0437\u0443 \u0434\u043b\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430, \u043f\u0440\u0438\u0434\u0443\u043c\u044b\u0432\u0430\u044f \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044e \u0431\u0430\u0437\u044b.\n\n\n\n**\u0417\u0430\u0434\u0430\u0447\u0438:**\n\n\n\n1. **\u0410\u043d\u0430\u043b\u0438\u0437 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0442\u0432\u0435\u0442\u043e\u0432:** \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u044f\u0437\u044b\u043a\u043e\u0432\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \u041e\u0446\u0435\u043d\u0438\u0442\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0448\u043a\u0430\u043b\u0443 \u043e\u0442 -2 \u0434\u043e 2, \u0433\u0434\u0435 -2 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043d\u0435\u0440\u0435\u043b\u0435\u0432\u0430\u043d\u0442\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442, \u0430 +2 \u2014 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0442\u043e\u0447\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442.\n\n\n\n2. **\u0410\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0435\u0439:** \u0417\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0432\u0440\u0435\u043c\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u0445, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e.\n\n\n\n3. **\u0422\u0432\u043e\u0440\u0447\u0435\u0441\u043a\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430:** \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u0439\u0442\u0435 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044e \u0431\u0430\u0437\u044b. \u041f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 \u044d\u0442\u0438\u0445 \u0432\u043e\u043f\u0440\u043e\u0441\u0430\u0445 \u0438 \u043e\u0446\u0435\u043d\u0438\u0442\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432.\n\n\n\n**\u041e\u0442\u0447\u0435\u0442:** \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u044c\u0442\u0435 \u043e\u0442\u0447\u0435\u0442 \u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445 \u0432\u0430\u0448\u0435\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430. \u0412 \u043e\u0442\u0447\u0435\u0442\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u044b:\n\n- \u0412\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0438\u0445 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438.\n\n- \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0438 \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u043d\u043d\u044b\u0435 \u0432\u0430\u043c\u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u044b.\n\n- \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.\n\n- \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0442\u0432\u0435\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.\n\n- \u0412\u0430\u0448\u0438 \u0432\u044b\u0432\u043e\u0434\u044b \u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043d\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.\n\n\n\n**\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438:** \u041f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0439. \u042d\u0442\u043e \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u043c \u0431\u043e\u043b\u0435\u0435 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.\nimport pandas as pd\n\n## \u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0431\u0430\u0437\u0430 \u0437\u043d\u0430\u043d\u0438\u0439 \u0423\u0418\u0418 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435\n### \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f gguf \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\n\n\n\n\n\nfrom IPython.display import clear_output\n\n!pip install langchain==0.0.322 pydantic openai==0.28.1 faiss-cpu==1.7.4 tiktoken==0.5.1 sentence_transformers==2.2.2 nltk==3.8.1\n\n!pip install -U deep-translator==1.11.4\n\nclear_output()\nimport os\n\nos.environ[\"LANGCHAIN_TRACING\"] = \"true\" # \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u00abtrue\u00bb\n!CMAKE_ARGS=\"-DLLAMA_CUBLAS=on\" FORCE_CMAKE=1 pip install --upgrade --force-reinstall llama-cpp-python==0.2.11 --no-cache-dir\n\nclear_output()\n\n### \u0421\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n\n\n\nimport os\n\nimport getpass\n\nimport openai\n\n\n\nos.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"OpenAI API Key:\")\n\nopenai.api_key = os.environ[\"OPENAI_API_KEY\"]\nfrom google.colab import drive\n\ndrive.mount('/content/drive')\nfrom langchain.vectorstores import FAISS\n\nfrom langchain.llms import OpenAI\n\nfrom langchain.docstore.document import Document\n\nfrom langchain.embeddings.openai import OpenAIEmbeddings\n\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter, NLTKTextSplitter, CharacterTextSplitter\n\nimport requests\n\nimport re\n\nimport pickle\n\nimport nltk\n\nimport os\n\nnltk.download('punkt')\n\n\n\n# \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u0438\u0437 \u0433\u0443\u0433\u043b \u0434\u0440\u0430\u0439\u0432\n\ndef load_document_text(url: str) -> str:\n\n    # Extract the document ID from the URL\n\n    match_ = re.search('/document/d/([a-zA-Z0-9-_]+)', url)\n\n    if match_ is None:\n\n        raise ValueError('Invalid Google Docs URL')\n\n    doc_id = match_.group(1)\n\n\n\n    # Download the document as plain text\n\n    response = requests.get(f'https://docs.google.com/document/d/{doc_id}/export?format=txt')\n\n    response.raise_for_status()\n\n    text = response.text\n\n\n\n    return text\n\n### \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0444\u0430\u0439\u043b\u043e\u0432\nfrom langchain.document_loaders import TextLoader\n\n\n\n\n\ndocuments = load_document_text(\"https://docs.google.com/document/d/1o0x1b-kSmHBzSOG5jP2tTywRi0AdygsM3FOkozO4BCI\")\n\nwith open('documents.txt', 'w',encoding='utf8') as f:\n\n    f.write(documents)\n\n\n\nloader = TextLoader('/content/documents.txt')\n\ndocuments = loader.load()\n\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=1024, chunk_overlap=0)\n\ndocs = text_splitter.split_documents(documents)\n\n\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 400 \u0447\u0430\u043d\u043a\u043e\u0432 \u0438\u0437 867, \u0442.\u043a. OpenAI \u043d\u0430\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e\u043c \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0435.\n\n# \u042d\u0442\u043e \u043f\u043e\u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043d\u0430 \u0432\u043e\u043f\u0440\u043e\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u043a \u043d\u0435\u0437\u0430\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0431\u0430\u0437\u044b \u0437\u043d\u0430\u043d\u0438\u0439\n\ndb = FAISS.from_documents(docs[:400], OpenAIEmbeddings())\n# \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u043f\u0430\u043f\u043a\u0443 UII_DZ_24_Lite_ru \u0441 \u0444\u0430\u0439\u043b\u0430\u043c\u0438 index.pkl \u0438 index.faiss\n\nproject_path = \"/content/drive/MyDrive\"\n\ndb.save_local(os.path.join(project_path, 'UII_DZ_24_Lite_ru'))\n# \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0444\u0430\u0439\u043b docs_new_ru.pkl (\u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u043a\u0430\u043a index.pkl)\n\nwith open(os.path.join(project_path, 'docs_new_ru.pkl'), 'wb') as f:\n\n    pickle.dump(docs, f, protocol = None, fix_imports = True)\n# \u0422\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043f\u0430\u043f\u043a\u0443 UII_DZ_24_Lite_ru\n\nproject_path = \"/content/drive/MyDrive/\"\n\n\n\ndb = FAISS.load_local(os.path.join(project_path, 'UII_DZ_24_Lite_ru'), OpenAIEmbeddings())\n\n### \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0432\u043e\u043f\u0440\u043e\u0441\u044b\nimport gdown\n\n\n\npath_download = 'https://drive.google.com/uc?id=1DyVljnB5K5cHX_Mod0P9CPxBE6syGH4n'\n\noutput = '\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.csv'\n\ngdown.download(path_download, output)\ndf_qw = pd.read_csv(\"/content/\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.csv\")\n\ndf_qw_ru = df_qw['\u0412\u043e\u043f\u0440\u043e\u0441'].values\n\ndf_qw_ru\n# \u041f\u0443\u0442\u044c \u043a \u0432\u0430\u0448\u0435\u043c\u0443 CSV \u0444\u0430\u0439\u043b\u0443\n\nfile_path = '/content/\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.csv'\n\n\n\n# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 CSV \u0444\u0430\u0439\u043b\u0430 \u0432 DataFrame\n\ndf = pd.read_csv(file_path)\n\n\n\ndf\n# \u041e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0432\u044b\u0445 6 \u0441\u0442\u0440\u043e\u043a\n\ndf_first_6 = df.head(6)\n\n\n\n# \u041f\u0443\u0442\u044c \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e CSV \u0444\u0430\u0439\u043b\u0430\n\nfile_path = '/content/\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.csv'\n\n\n\n# \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0433\u043e DataFrame \u0432 \u043d\u043e\u0432\u044b\u0439 CSV \u0444\u0430\u0439\u043b\n\ndf_first_6.to_csv(file_path, index=False)\n\n\n\n# \u0412\u044b\u0432\u043e\u0434 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u043c \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438\n\nprint(f\"\u041f\u0435\u0440\u0432\u044b\u0435 6 \u0441\u0442\u0440\u043e\u043a \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u044b \u0432 {file_path}\")\n\n# \u041f\u0443\u0442\u044c \u043a \u0432\u0430\u0448\u0435\u043c\u0443 CSV \u0444\u0430\u0439\u043b\u0443\n\nfile_path = '/content/\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.csv'\n\n\n\n# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 CSV \u0444\u0430\u0439\u043b\u0430 \u0432 DataFrame\n\ndf = pd.read_csv(file_path)\n\n\n\ndf\ndf_qw_ru = df['\u0412\u043e\u043f\u0440\u043e\u0441'].values\ndf_qw_ru", "metadata": {"subid": 0, "total": 2, "source": "https://colab.research.google.com/drive/1cfNjjnP20KFdN_wFf0Ab6PtdqsZv9t-8#scrollTo=vFmnOH06_9tl"}}}, {"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\n### Saiga2_7B_8_gguf\n!wget https://huggingface.co/IlyaGusev/saiga2_7b_gguf/resolve/main/model-q8_0.gguf\n\nclear_output()\n# import fire\n\nfrom llama_cpp import Llama\n\n\n\nSYSTEM_PROMPT = \"\"\"\u0422\u044b \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0432 \u0447\u0430\u0442\u0435 \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442 \u0418\u0441\u0441\u043a\u0443\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u043b\u043b\u0435\u043a\u0442\u0430. \u041a\u043e\u043c\u043f\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0434\u0430\u0435\u0442 \u043a\u0443\u0440\u0441\u044b \u043f\u043e AI.\n\n\u0423 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u0435\u0441\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430\u043c\u0438 \u043e \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0430\u0445 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435. \u0422\u0435\u0431\u0435 \u0437\u0430\u0434\u0430\u0435\u0442 \u0432\u043e\u043f\u0440\u043e\u0441 \u043a\u043b\u0438\u0435\u043d\u0442 \u0432 \u0447\u0430\u0442\u0435, \u0434\u0430\u0439 \u0435\u043c\u0443 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u0430,\n\n\u043e\u043f\u0438\u0440\u0430\u044f\u0441\u044c \u043d\u0430 \u043e\u0442\u0440\u044b\u0432\u043a\u0438 \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u043f\u043e\u0441\u0442\u0430\u0440\u0430\u0439\u0441\u044f \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u0430\u0445\u043e\u0442\u0435\u043b \u043f\u043e\u0441\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u043a\u0443\u043f\u0438\u0442\u044c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435. \u041e\u0442\u0432\u0435\u0447\u0430\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\n\n\u0442\u043e\u0447\u043d\u043e \u043f\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443, \u043d\u0435 \u043f\u0440\u0438\u0434\u0443\u043c\u044b\u0432\u0430\u0439 \u043d\u0438\u0447\u0435\u0433\u043e \u043e\u0442 \u0441\u0435\u0431\u044f. \u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0441\u0441\u044b\u043b\u0430\u0439\u0441\u044f \u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0435\u0433\u043e \u043e\u0442\u0440\u044b\u0432\u043a\u043e\u0432 \u043f\u0440\u0438 \u043e\u0442\u0432\u0435\u0442\u0435, \u043a\u043b\u0438\u0435\u043d\u0442 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d\n\n\u0437\u043d\u0430\u0442\u044c \u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u0442\u044b \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0448\u044c. \u041e\u0442\u0432\u0435\u0447\u0430\u0439 \u043e\u0442 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043b\u0438\u0446\u0430 \u0431\u0435\u0437 \u0441\u0441\u044b\u043b\u043e\u043a \u043d\u0430 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u044b \u043e\u043f\u0438\u0440\u0430\u0435\u0448\u044c\u0441\u044f. \u0415\u0441\u043b\u0438 \u0442\u044b \u043d\u0435 \u0437\u043d\u0430\u0435\u0448\u044c \u043e\u0442\u0432\u0435\u0442\u0430 \u0438\u043b\u0438 \u0435\u0433\u043e \u043d\u0435\u0442 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435, \u0442\u043e \u043e\u0442\u0432\u0435\u0442\u044c \"\u042f \u043d\u0435 \u043c\u043e\u0433\u0443 \u043e\u0442\u0435\u0442\u0438\u0442\u044c \u043d\u0430 \u044d\u0442\u043e\u0442 \u0432\u043e\u043f\u0440\u043e\u0441\".\n\n\"\"\"\n\nSYSTEM_TOKEN = 1788\n\nUSER_TOKEN = 1404\n\nBOT_TOKEN = 9225\n\nLINEBREAK_TOKEN = 13\n\n\n\nROLE_TOKENS = {\n\n    \"user\": USER_TOKEN,\n\n    \"bot\": BOT_TOKEN,\n\n    \"system\": SYSTEM_TOKEN\n\n}\n\n\n\ndef get_message_tokens(model, role, content):\n\n    message_tokens = model.tokenize(content.encode(\"utf-8\"))\n\n    message_tokens.insert(1, ROLE_TOKENS[role])\n\n    message_tokens.insert(2, LINEBREAK_TOKEN)\n\n    message_tokens.append(model.token_eos())\n\n    return message_tokens\n\n\n\n\n\ndef get_system_tokens(model):\n\n    system_message = {\n\n        \"role\": \"system\",\n\n        \"content\": SYSTEM_PROMPT\n\n    }\n\n    # \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0442\u043e\u043a\u0435\u043d\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044e get_message_tokens\n\n    return get_message_tokens(model, **system_message)\n\ndef interact(\n\n    model,\n\n    query,\n\n    tokens,\n\n    top_k=30,\n\n    top_p=0.9,\n\n    temperature=0.2,\n\n    repeat_penalty=1.1\n\n):\n\n\n\n    answer = []\n\n\n\n    while True:\n\n        user_message = f\"User: {query}\"\n\n        message_tokens = get_message_tokens(model=model, role=\"user\", content=user_message)\n\n        role_tokens = [model.token_bos(), BOT_TOKEN, LINEBREAK_TOKEN]\n\n        tokens += message_tokens + role_tokens\n\n        generator = model.generate(\n\n            tokens,\n\n            top_k=top_k,\n\n            top_p=top_p,\n\n            temp=temperature,\n\n            repeat_penalty=repeat_penalty,\n\n\n\n        )\n\n        for token in generator:\n\n            token_str = model.detokenize([token]).decode(\"utf-8\", errors=\"ignore\")\n\n            tokens.append(token)\n\n            answer.append(token_str)\n\n            if token == model.token_eos():\n\n                print('\u041e\u0442\u0432\u0435\u0442: ',''.join(answer))\n\n                return ''.join(answer)\n\n                break\n\n\n\n            print(token_str, end=\"\", flush=True)\n\n\n\n        print()\n\n# \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c\n\nmodel = Llama(\n\n    model_path='/content/model-q8_0.gguf',\n\n    n_ctx=4096,\n\n    n_parts=1,\n\n    n_gpu_layers=150,\n\n    n_batch=512,\n\n    n_gqa=8,\n\n    verbose=True\n\n)\n\n\n\nsystem_tokens = get_system_tokens(model)\n\ntokens = system_tokens\n\nmodel.eval(tokens)\nimport re\n\nimport time\n\n\n\nhistory = []\n\nquery_time = []\n\n\n\nfor query in df_qw_ru:\n\n    # \u041f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u043c 3 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0435\u043b\u0435\u0432\u0430\u043d\u0442\u043d\u044b\u0445 \u0447\u0430\u043d\u043a\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0438\u043d\u0434\u0435\u043a\u0441\u043d\u043e\u0439 \u0431\u0430\u0437\u044b\n\n    sim_docs = db.similarity_search(query, k=3)\n\n    docs = re.sub(r'\\n{2}', ' ', '\\n '.join([f'======\\n' + doc.page_content + '\\n' for i, doc in enumerate(sim_docs)]))\n\n    template = f\"\"\"\n\n    \u0412\u043e\u043f\u0440\u043e\u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:\n\n    {query}\n\n\n\n    \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0443:\n\n    {docs}\n\n    \"\"\"\n\n\n\n    # print('template ',template)\n\n    system_tokens = get_system_tokens(model)\n\n    tokens = system_tokens\n\n    model.eval(tokens)\n\n    start_time = time.time()\n\n    result = interact(model, query=template, tokens=tokens)\n\n    finish_time = time.time()\n\n    print('\\n\\n\u0432\u0440\u0435\u043c\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u0430', round(finish_time - start_time), '\u0441\u0435\u043a\u0443\u043d\u0434(\u044b)\\n')\n\n    query_time.append(round(finish_time - start_time))\n\n    history.append([str(query), result, str(docs)])\n\npd.DataFrame(history, columns=['\u0412\u043e\u043f\u0440\u043e\u0441', '\u041e\u0442\u0432\u0435\u0442', '\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442']).to_csv(os.path.join(project_path, 'Saiga2_7b_GGUF-8' + '.csv'), index=False)\n# \u041f\u0443\u0442\u044c \u043a CSV \u0444\u0430\u0439\u043b\u0443\n\ncsv_file_path = os.path.join(project_path, 'Saiga2_7b_GGUF-8.csv')\n\n\n\n# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 CSV \u0444\u0430\u0439\u043b\u0430 \u0432 DataFrame\n\ndf_1 = pd.read_csv(csv_file_path)\n\ndf_1\nprint('\u0412\u0440\u0435\u043c\u044f \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u044b:', ', '.join([str(qt) for qt in query_time]), '\u0441\u0435\u043a\u0443\u043d\u0434(\u044b)')\n\nprint('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430', round(sum(query_time)/len(query_time)), '\u0441\u0435\u043a\u0443\u043d\u0434(\u044b)')\n\n\n## \u0410\u043d\u0430\u043b\u0438\u0437 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0442\u0432\u0435\u0442\u043e\u0432:\n\n\n\n \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u044f\u0437\u044b\u043a\u043e\u0432\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \u041e\u0446\u0435\u043d\u0438\u0442\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0448\u043a\u0430\u043b\u0443 \u043e\u0442 -2 \u0434\u043e 2, \u0433\u0434\u0435 -2 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043d\u0435\u0440\u0435\u043b\u0435\u0432\u0430\u043d\u0442\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442, \u0430 +2 \u2014 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0442\u043e\u0447\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442.\ninstruction = \"\"\"\n\n    \u041e\u0446\u0435\u043d\u0438\u0442\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0432\u0435\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u0448\u043a\u0430\u043b\u0435 \u043e\u0442 -2 \u0434\u043e 2, \u0433\u0434\u0435:\n\n    -2: \u0410\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043d\u0435\u0440\u0435\u043b\u0435\u0432\u0430\u043d\u0442\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442\n\n    -1: \u041d\u0435\u043f\u043e\u043b\u043d\u044b\u0439 \u0438\u043b\u0438 \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442\n\n     0: \u0423\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u043d\u043e \u043d\u0435\u043f\u043e\u043b\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442\n\n     1: \u041f\u043e\u0447\u0442\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442, \u043d\u043e \u0441 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438 \u043e\u0448\u0438\u0431\u043a\u0430\u043c\u0438\n\n     2: \u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0442\u043e\u0447\u043d\u044b\u0439 \u0438 \u0440\u0435\u043b\u0435\u0432\u0430\u043d\u0442\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442.\n\n      \u0424\u043e\u0440\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 - \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u043e\u0442 -2 \u0434\u043e 2. \u041d\u0435 \u043f\u0438\u0448\u0438 \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u0441\u043b\u043e\u0432 \u0438 \u043f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0439.\n\n\"\"\"\nimport openai\n\n\n\ndef get_answer( topic):\n\n\n\n    messages = [\n\n        {\"role\": \"system\", \"content\":'\u0422\u0432\u043e\u044f \u0437\u0430\u0434\u0430\u0447\u0430: \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0438 \u043f\u043e\u043b\u043d\u043e\u0442\u0443 \u043e\u0442\u0432\u0435\u0442\u0430.'},\n\n        {\"role\": \"user\", \"content\": f\"{instruction}.\\n\\n \u041e\u0442\u0432\u0435\u0442:\\n{topic}\"}\n\n    ]\n\n\n\n    completion = openai.ChatCompletion.create(\n\n        model=\"gpt-3.5-turbo-1106\",\n\n        messages=messages\n\n    )\n\n\n\n    return completion.choices[0].message.content\n# \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043a\u043e \u0432\u0442\u043e\u0440\u043e\u043c\u0443 \u0441\u0442\u043e\u043b\u0431\u0446\u0443 \u0438 \u0437\u0430\u043f\u0438\u0441\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432 \u043d\u043e\u0432\u044b\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \"\u041e\u0446\u0435\u043d\u043a\u0430 GPT\"\n\ndf_1[\"\u041e\u0446\u0435\u043d\u043a\u0430 GPT\"] = df_1[\"\u041e\u0442\u0432\u0435\u0442\"].apply(get_answer)\ndf_1\n\n\u041e\u0442\u0447\u0435\u0442\n# \u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u043e\u0432\u043e\u0433\u043e DataFrame\n\nmodel_name = \"Saiga2_7B_8_gguf\"\n\nused_questions = [\n\n    \"\u041a\u0430\u043a \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c chatGPT?\",\n\n    \"\u041a\u0430\u043a\u0438\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0440\u0430\u0441\u0441\u0440\u043e\u0447\u043a\u0438 \u0435\u0441\u0442\u044c \u043d\u0430 \u0442\u0430\u0440\u0438\u0444 \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439?\",\n\n    \"\u041a\u0430\u043a\u0438\u0435 \u043a\u0443\u0440\u0441\u044b \u043f\u043e chatGPT \u0435\u0441\u0442\u044c \u0432 \u0423\u0418\u0418?\",\n\n    \"\u041a\u0430\u043a\u0438\u0435 \u0442\u0435\u043c\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u043a\u0443\u0440\u0441 'AI \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440'?\",\n\n    \"\u041a\u0430\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f?\",\n\n    \"\u041a\u0443\u0440\u0441 AI \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u043e\u0438\u0442?\"\n\n]\n\naverage_quality_score = -1\n\naverage_response_time = \"9 \u0441\u0435\u043a\"\n\nconclusions = \"\u041c\u043e\u0434\u0435\u043b\u044c \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0431\u044b\u0441\u0442\u0440\u043e, \u043d\u043e \u0438\u043d\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442.\"\n\n\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e DataFrame\n\ndf_summary = pd.DataFrame({\n\n    \"\u041c\u043e\u0434\u0435\u043b\u044c\": [model_name],\n\n    \"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b\": [used_questions],\n\n    \"\u0421\u0440\u0435\u0434\u043d\u044f\u044f \u043e\u0446\u0435\u043d\u043a\u0430 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0442\u0432\u0435\u0442\u0430\": [average_quality_score],\n\n    \"\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043e\u0442\u0432\u0435\u0442\u043e\u0432\": [average_response_time],\n\n    \"\u0412\u044b\u0432\u043e\u0434\u044b\": [conclusions]\n\n})\n\n\n\ndf_summary", "metadata": {"subid": 1, "total": 2, "source": "https://colab.research.google.com/drive/1cfNjjnP20KFdN_wFf0Ab6PtdqsZv9t-8#scrollTo=vFmnOH06_9tl"}}}]