[{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\nfrom bs4 import BeautifulSoup\n\nimport requests\n\n# BeautifulSoup\n### \u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0442\u0435\u043a\u0441\u0442\u0430\n\u0414\u043b\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0442\u0435\u043a\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442 https://rustih.ru/fedor-tyutchev-zima-nedarom-zlitsya/. \u0417\u0430\u0434\u0430\u0447\u0430 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0438\u0445\u043e\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u0435, \u0431\u0435\u0437 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u043b\u0438\u0448\u043d\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.\n# \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u0442\u0438\u0445\u043e\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u0435\u043c\n\nurl = 'https://rustih.ru/fedor-tyutchev-zima-nedarom-zlitsya/'\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\nresponse = requests.get(url)\n\nprint(response)\n# \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u043a\u043e\u0434\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n\nbs = BeautifulSoup(response.text, \"html.parser\")\n\nprint(bs)\n\n\u0427\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 Chrome \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0436\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438 \u0432 \u043e\u043a\u043d\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u0438 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \"\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u043e\u0434\", \u043b\u0438\u0431\u043e \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0436\u0430\u0442\u044c \u043a\u043b\u0430\u0432\u0438\u0448\u0443 `f12`.\n\u0414\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 BeautifulSoup \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f `findAll()`, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0442\u0435\u0433, \u0438\u043c\u044f \u043a\u043b\u0430\u0441\u0441\u0430, id \u0438\u043b\u0438 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.\n# <div class=\"entry-content poem-text\" ...>\n\n# \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u044b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0441 \u0442\u0435\u0433\u043e\u043c div \u0438 \u0438\u043c\u0435\u043d\u0435\u043c \u043a\u043b\u0430\u0441\u0441\u0430 'entry-content poem-text'\n\nallNews = bs.findAll('div', class_='entry-content poem-text')\n# \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u043e\u0438\u0441\u043a\u0430\n\nallNews\n# \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0443\u044e \u043e\u0447\u0438\u0441\u0442\u043a\u0443\n\nprint(allNews[0].text)\n# \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u043a\u0441\u0442 \u0441\u0442\u0438\u0445\u043e\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u044f\n\nprint(allNews[0].text.split('\u0410\u043d\u0430\u043b\u0438\u0437 \u0441\u0442\u0438\u0445\u043e\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u044f')[0])\n\n### \u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439\n\u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u0441 \u0441\u0430\u0439\u0442\u0430 \u0446\u0432\u0435\u0442\u043e\u0447\u043d\u043e\u0439 \u0431\u0430\u0437\u044b https://bazazvetov.ru/gallery\n# \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0446\u0432\u0435\u0442\u0430\u043c\u0438\n\nurl = 'https://bazazvetov.ru/gallery'\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\nresponse = requests.get(url)\n\nprint(response)\n# \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u043a\u043e\u0434\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n\nbs = BeautifulSoup(response.text, \"html.parser\")\n\nprint(bs)\n# <img class=\"sb-image-crop sb-image-crop_loaded lazy\" ...>\n\nallimgs = bs.findAll('img', class_='sb-image-crop sb-image-crop_loaded lazy')\n\nallimgs\n# \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c img\n\nfor img in allimgs:\n\n\n\n  # \u0434\u043e\u0441\u0442\u0430\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e src - url \u043a \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0435\n\n  print(img.attrs.get(\"src\"))\n\n\u0421\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0435\u0441\u0442\u044c, \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u043a\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u043f\u043e \u044d\u0442\u0438\u043c \u0441\u0441\u044b\u043b\u043a\u0430\u043c\n# \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c get \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n\nfilename = requests.get('https://259506.selcdn.ru/sites-static/site653617/b3ceb688-28c5-4056-b4a6-6c3a96ef4473/b3ceb688-28c5-4056-b4a6-6c3a96ef4473-2812157.jpeg')\n\n\n\n# \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0444\u0430\u0439\u043b \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430\n\nwith open('img.jpg', \"wb\") as out:\n\n  out.write(filename.content)\n\n\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u043c \u0432\u0441\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n# \u043d\u043e\u043c\u0435\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n\nnum = 1\n\n\n\n# \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c img\n\nfor img in allimgs:\n\n\n\n  # \u0434\u043e\u0441\u0442\u0430\u0435\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\n\n  img_url = img.attrs.get(\"src\")\n\n\n\n  # get \u0437\u0430\u043f\u0440\u043e\u0441\n\n  filename = requests.get(img_url)\n\n\n\n  # \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u0444\u0430\u0439\u043b\n\n  with open(f'img_{num}.jpg', \"wb\") as out:\n\n    out.write(filename.content)\n\n\n\n  num+=1\n\n### \u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0430\u0443\u0434\u0438\u043e\n\u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0430\u0443\u0434\u0438\u043e\u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0431\u0443\u0434\u0435\u043c \u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u0441\u0430\u0439\u0442\u0430 https://voicebot.su/ru/category/penie-ptits/\n# \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0437\u0432\u0443\u043a\u0430\u043c\u0438 \u043f\u0435\u043d\u0438\u044f \u043f\u0442\u0438\u0446\n\nurl = 'https://voicebot.su/ru/category/penie-ptits/'\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\nresponse = requests.get(url)\n\nprint(response)\n# \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u043a\u043e\u0434\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n\nbs = BeautifulSoup(response.text, \"html.parser\")\n\nprint(bs)\n# <div class=\"audio-wrapper sound\" ...>\n\nalldivs = bs.findAll('div', class_='audio-wrapper sound')\n\nalldivs\n# \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c div \u043a\u043b\u0430\u0441\u0441\u0430 'audio-wrapper sound'\n\nfor div in alldivs:\n\n\n\n  # \u0434\u043e\u0441\u0442\u0430\u0435\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0430\u0443\u0434\u0438\u043e\u0444\u0430\u0439\u043b (\u0430\u0434\u0440\u0435\u0441 \u043d\u0435 \u043f\u043e\u043b\u043d\u044b\u0439)\n\n  print(div.attrs.get(\"data-audio_url\"))\n\n\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043c \u0441\u0440\u0430\u0437\u0443 \u0432\u0441\u0435 \u0430\u0443\u0434\u0438\u043e\n# \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0430\u0434\u0440\u0435\u0441\n\nraw_url = 'https://voicebot.su/'\n\n\n\n# \u043d\u043e\u043c\u0435\u0440 \u0430\u0443\u0434\u0438\u043e\u0437\u0430\u043f\u0438\u0441\u0438\n\nnum = 1\n\n\n\n# \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c div \u043a\u043b\u0430\u0441\u0441\u0430 'audio-wrapper sound'\n\nfor div in alldivs:\n\n\n\n  # \u0434\u043e\u0441\u0442\u0430\u0435\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0430\u0443\u0434\u0438\u043e\u0444\u0430\u0439\u043b\n\n  audio_url = raw_url + div.attrs.get(\"data-audio_url\")\n\n\n\n  # get \u0437\u0430\u043f\u0440\u043e\u0441\n\n  filename = requests.get(audio_url)\n\n\n\n  # \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0430\u0443\u0434\u0438\u043e \u0432 \u0444\u0430\u0439\u043b\n\n  with open(f'bird_song_{num}.mp3', \"wb\") as out:\n\n    out.write(filename.content)\n\n\n\n  num+=1\n\n### \u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0432\u0438\u0434\u0435\u043e\n\u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0432\u0438\u0434\u0435\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0441 \u0441\u0430\u0439\u0442\u0430 https://www.videvo.net/\n# \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u0432\u0438\u0434\u0435\u043e\n\nurl = 'https://www.videvo.net/'\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\nresponse = requests.get(url)\n\nprint(response)\n# \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u043a\u043e\u0434\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n\nbs = BeautifulSoup(response.text, \"html.parser\")\n\nprint(bs)\n# <source src=\"https://joy1.videvo.net/...\" type=\"video/mp4\">\n\nallvid = bs.findAll('source', type=\"video/mp4\")\n\nallvid\n\n\u0421\u043a\u0430\u0447\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 3 \u0432\u0438\u0434\u0435\u043e \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0430\u043c\n# \u043d\u043e\u043c\u0435\u0440 \u0432\u0438\u0434\u0435\u043e\n\nnum = 1\n\n\n\n# \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c \u0441\u043f\u0438\u0441\u043a\u0430 allvid\n\nfor vid in allvid[:3]:\n\n\n\n  # \u0434\u043e\u0441\u0442\u0430\u0435\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0432\u0438\u0434\u0435\u043e\u0444\u0430\u0439\u043b\n\n  video_url = vid.attrs.get(\"src\")\n\n\n\n  # get \u0437\u0430\u043f\u0440\u043e\u0441\n\n  filename = requests.get(video_url)\n\n\n\n  # \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0432\u0438\u0434\u0435\u043e \u0432 \u0444\u0430\u0439\u043b\n\n  with open(f'video_{num}.mp4', \"wb\") as out:\n\n    out.write(filename.content)\n\n\n\n  num+=1\n\n# Selenium\n### \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Selenium \u0432 colab\n\u0414\u043b\u044f \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b selenium \u0432 colab \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u044f\u0447\u0435\u0439\u043a\u0443 \u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u043e\u0439 \u0432\u0441\u0435\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432\n%%shell\n\n# Ubuntu no longer distributes chromium-browser outside of snap\n\n#\n\n# Proposed solution: https://askubuntu.com/questions/1204571/how-to-install-chromium-without-snap\n\n\n\n# Add debian buster\n\ncat > /etc/apt/sources.list.d/debian.list <<'EOF'\n\ndeb [arch=amd64 signed-by=/usr/share/keyrings/debian-buster.gpg] http://deb.debian.org/debian buster main\n\ndeb [arch=amd64 signed-by=/usr/share/keyrings/debian-buster-updates.gpg] http://deb.debian.org/debian buster-updates main\n\ndeb [arch=amd64 signed-by=/usr/share/keyrings/debian-security-buster.gpg] http://deb.debian.org/debian-security buster/updates main\n\nEOF\n\n\n\n# Add keys\n\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys DCC9EFBF77E11517\n\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138\n\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys 112695A0E562B32A\n\n\n\napt-key export 77E11517 | gpg --dearmour -o /usr/share/keyrings/debian-buster.gpg\n\napt-key export 22F3D138 | gpg --dearmour -o /usr/share/keyrings/debian-buster-updates.gpg\n\napt-key export E562B32A | gpg --dearmour -o /usr/share/keyrings/debian-security-buster.gpg\n\n\n\n# Prefer debian repo for chromium* packages only\n\n# Note the double-blank lines between entries\n\ncat > /etc/apt/preferences.d/chromium.pref << 'EOF'\n\nPackage: *\n\nPin: release a=eoan\n\nPin-Priority: 500\n\n\n\n\n\nPackage: *\n\nPin: origin \"deb.debian.org\"\n\nPin-Priority: 300\n\n\n\n\n\nPackage: chromium*\n\nPin: origin \"deb.debian.org\"\n\nPin-Priority: 700\n\nEOF\n\n\n\n# Install chromium and chromium-driver\n\napt-get update\n\napt-get install chromium chromium-driver\n\n\n\n# Install selenium\n\npip install selenium\n\n\u0414\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0432 colab (\u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 chrome) \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 `driver` \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0432 \u044f\u0447\u0435\u0439\u043a\u0435 \u043d\u0438\u0436\u0435\nfrom selenium import webdriver\n\nfrom selenium.webdriver.chrome.options import Options\n\n\n\n# \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u0441\u043b\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 webdriver\n\noptions = Options()\n\noptions.add_argument(\"--headless\")\n\noptions.add_argument(\"--no-sandbox\")\n\noptions.headless = True\n\n\n\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 webdriver \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0432 Chrome\n\ndriver = webdriver.Chrome(options=options)\n\n### \u041d\u0430\u0447\u0430\u043b\u043e \u0440\u0430\u0431\u043e\u0442\u044b \u0441 Selenium\n\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0442\u0435\u043a\u0441\u0442\u0430 \u0441\u0442\u0438\u0445\u043e\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0434\u0435\u043b\u0430\u043b\u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u0435\n# \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\nurl = \"https://rustih.ru/fedor-tyutchev-zima-nedarom-zlitsya/\"\n\n\n\n# \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\ndriver.get(url)\n\n\n\n# \u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n\nprint(driver.page_source)\n\n### \u041f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\n\u0414\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `find_element()` \u0438\u043b\u0438 `find_elements()`. \u0424\u0443\u043d\u043a\u0446\u0438\u044f `find_element()` \u0432\u0435\u0440\u043d\u0451\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a `find_elements()` \u0432\u0435\u0440\u043d\u0451\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n\u041a\u043b\u0430\u0441\u0441 `By` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u043f\u043e\u0438\u0441\u043a\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435. \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430:\n    find_element(By.ID, \"id\")\n\n    find_element(By.NAME, \"name\")\n\n    find_element(By.XPATH, \"xpath\")\n\n    find_element(By.LINK_TEXT, \"link text\")\n\n    find_element(By.PARTIAL_LINK_TEXT, \"partial link text\")\n\n    find_element(By.TAG_NAME, \"tag name\")\n\n    find_element(By.CLASS_NAME, \"class name\")\n\n    find_element(By.CSS_SELECTOR, \"css selector\")\nfrom selenium.webdriver.common.by import By\n\n\n\n# \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\nurl = \"https://rustih.ru/fedor-tyutchev-zima-nedarom-zlitsya/\"\n\n\n\n# \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\ndriver.get(url)\n\n\n\n# \u043f\u043e\u0438\u0441\u043a \u043a\u043b\u0430\u0441\u0441\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c 'entry-content.poem-text'\n\nbt = driver.find_element(By.CLASS_NAME, 'entry-content.poem-text')\n\nprint(bt.text)\n\n\u041e\u0441\u0442\u0430\u0432\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u043a\u0441\u0442 \u0441\u0442\u0438\u0445\u043e\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u044f\nprint(bt.text.split('\u0410\u043d\u0430\u043b\u0438\u0437 \u0441\u0442\u0438\u0445\u043e\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u044f')[0])\n\n### \u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 (\u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u043f\u0440\u043e\u043a\u0440\u0443\u0442\u043a\u0430)\n# \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0430\u0439\u0442\n\nurl = 'https://scrapingclub.com/exercise/list_infinite_scroll/'\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c get \u0437\u0430\u043f\u0440\u043e\u0441\n\nresponse = requests.get(url)\n\n\n\n# \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u043a\u043e\u0434\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n\nbs = BeautifulSoup(response.text, \"html.parser\")\n\n\n\n# \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 <h4 class=\"card-title\">\n\nall_prod = bs.findAll('h4', class_='card-title')\n\nprint('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u043e\u0432 \u0442\u043e\u0432\u0430\u0440\u043e\u0432:', len(all_prod))\n\nprint()\n\nfor prod in all_prod:\n\n  print(prod.text[1:-1])\n\n\u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 BeautifulSoup \u043c\u044b \u0441\u043c\u043e\u0433\u043b\u0438 \u043d\u0430\u043f\u0430\u0440\u0441\u0438\u0442\u044c 9 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u0442\u043e\u0432\u0430\u0440\u043e\u0432. \u0415\u0441\u043b\u0438 \u0437\u0430\u0439\u0442\u0438 \u043d\u0430 \u0441\u0430\u0439\u0442 \u0438 \u043f\u0440\u043e\u043a\u0440\u0443\u0442\u0438\u0442\u044c \u0432\u0441\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u0432\u043d\u0438\u0437, \u0442\u043e \u0438\u0445 \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0431\u043e\u043b\u044c\u0448\u0435 9.\n\n\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Selenium\nfrom selenium.webdriver.common.by import By\n\n\n\n# \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\nurl = \"https://scrapingclub.com/exercise/list_infinite_scroll/\"\n\n\n\n# \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\ndriver.get(url)\n\n\n\n# \u043f\u043e\u0438\u0441\u043a \u043a\u043b\u0430\u0441\u0441\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c 'entry-content.poem-text'\n\nbt = driver.find_elements(By.CLASS_NAME, 'card-title')\n\nprint('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u043e\u0432 \u0442\u043e\u0432\u0430\u0440\u043e\u0432:', len(bt))\n\nprint()\n\nfor i in bt:\n\n  print(i.text)\n\n\u041f\u043e\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435, \u043d\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0438\u043c\u0438\u0442\u0430\u0446\u0438\u044e \u043f\u0440\u043e\u043a\u0440\u0443\u0442\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u043d\u0438\u0437 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `execute_script()`\n# \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0441\u043a\u0440\u0438\u043f\u0442 \u0438\u043c\u0438\u0442\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u043a\u0440\u0443\u0442\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u043d\u0438\u0437\n\ndriver.execute_script('window.scrollTo(0, document.body.scrollHeight);')", "metadata": {"subid": 0, "total": 2, "source": "https://colab.research.google.com/drive/1_gXACLar59h_zXf2lof-aAu0Vm34sMR4?usp=sharing"}}}, {"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\n\u0418\u043d\u043e\u0433\u0434\u0430, \u043f\u0440\u0438 \u043f\u0440\u043e\u043a\u0440\u0443\u0442\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f \u043d\u0435 \u0441\u0440\u0430\u0437\u0443, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u043d\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `time.sleep(5)`. \u0422\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u043e\u043a\u0440\u0443\u0442\u043a\u0443 \u0438 \u043f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u044f\u0447\u0435\u0439\u043a\u0430\u0445, \u0442\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f.\n# \u043f\u043e\u0438\u0441\u043a \u043a\u043b\u0430\u0441\u0441\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c 'entry-content.poem-text'\n\nbt = driver.find_elements(By.CLASS_NAME, 'card-title')\n\nprint('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u043e\u0432 \u0442\u043e\u0432\u0430\u0440\u043e\u0432:', len(bt))\n\nprint()\n\nfor i in bt:\n\n  print(i.text)\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u0438\u043c\u0435\u0435\u043c \u043f\u043e\u043b\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441\u0430\u0439\u0442\u0430.", "metadata": {"subid": 1, "total": 2, "source": "https://colab.research.google.com/drive/1_gXACLar59h_zXf2lof-aAu0Vm34sMR4?usp=sharing"}}}]