[{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\n\n\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0430\u0440\u0445\u0438\u0432 \u0441 \u0430\u0443\u0434\u0438\u043e\u0437\u0430\u043f\u0438\u0441\u044f\u043c\u0438 [archive](https://drive.google.com/file/d/1QyfUZihJhVjM326EwJ9lm8oeTno2YgyI/view?usp=sharing). \u0421\u043a\u0430\u0447\u0430\u0442\u044c, \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u0442\u044c, \u043f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u043a \u0441\u0435\u0431\u0435 \u043d\u0430 \u0433\u0443\u0433\u043b-\u0434\u0438\u0441\u043a \u0432 \u043f\u0430\u043f\u043a\u0443 audio.\n### \u0412\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0430\u0443\u0434\u0438\u043e\u0444\u0430\u0439\u043b\u043e\u0432\nfrom IPython.display import Audio\n\n\n\n# \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043c \u0430\u0443\u0434\u0438\u043e\n\nAudio('/content/drive/MyDrive/audio/manager.mp3')\n\n### \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0430\u0443\u0434\u0438\u043e\n# \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 pydub\n\n!pip install pydub\nfrom pydub import AudioSegment\n\n\n\n# \u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u043b\u044e\u0431\u043e\u0433\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0430\n\nmusic = AudioSegment.from_file(file='/content/drive/MyDrive/audio/manager.mp3',\n\n                               format='mp3')\n\n\n\n# \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0430\u0443\u0434\u0438\u043e (\u0441\u0435\u043a\u0443\u043d\u0434\u044b)\n\nprint(music.duration_seconds)\n\n\n\n# \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u0434\u0438\u0441\u043a\u0440\u0435\u0442\u0438\u0437\u0430\u0446\u0438\n\nprint(music.frame_rate)\n\n\n\n# \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432\n\nprint(music.channels)\n\n### \u041e\u0431\u0440\u0435\u0437\u043a\u0430 \u0430\u0443\u0434\u0438\u043e\n# \u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u043b\u044e\u0431\u043e\u0433\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0430\n\ndebaty = AudioSegment.from_file(file='/content/drive/MyDrive/audio/debaty.mp3',\n\n                               format='mp3')\n\n\n\n# \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\n\nprint(debaty.duration_seconds)\n\nprint(debaty.frame_rate)\n\nprint(debaty.channels)\n\n\n\n# \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 40 \u0441\u0435\u043a\u0443\u043d\u0434 \u0432 \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445\n\nFORTY_SECONDS = 40 * 1000\n\n\n\n# \u043e\u0431\u0440\u0435\u0437\u043a\u0430 \u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u0438\n\n# \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 40 \u0441\u0435\u043a\u0443\u043d\u0434 \u0430\u0443\u0434\u0438\u043e\u0437\u0430\u043f\u0438\u0441\u0438\n\ndebaty[:FORTY_SECONDS]\n# \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043c \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442 \u0432 \u0444\u0430\u0439\u043b\n\ndebaty[40000:50000].export('part.mp3', format='mp3')\n\n# Google STT\n# \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438\n\n!pip install SpeechRecognition\n\n\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 SpeechRecognition \u043e\u0434\u043d\u0430 \u0438\u0437 \u0441\u0430\u043c\u044b\u0445 \u0441\u0442\u0430\u0440\u044b\u0445 \u0438 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438. \u041e\u043d\u0430 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u044f\u0437\u044b\u043a\u043e\u0432, \u043d\u043e \u0438\u0445 \u043d\u0443\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u044f\u0432\u043d\u043e. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0430\u0442\u044b WAV, AIFF, AIFF-C \u0438 FLAC.\n# \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043c \u0430\u0443\u0434\u0438\u043e\n\nAudio('/content/drive/MyDrive/audio/sample_3.wav')\nimport speech_recognition as sR\n\n\n\n# \u043f\u0443\u0442\u044c \u043a \u0430\u0443\u0434\u0438\u043e\u0444\u0430\u0439\u043b\u0443\n\nfile_path = '/content/drive/MyDrive/audio/sample_3.wav'\n\n\n\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 Recognizer\n\nr = sR.Recognizer()\n\n\n\n# \u0447\u0438\u0442\u0430\u0435\u043c \u0444\u0430\u0439\u043b\n\nwith sR.AudioFile(file_path) as source:\n\n  audio = r.record(source)\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u0435\n\nresult = r.recognize_google(audio, language='ru')\n\nresult\n\n\u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0442\u044c \u0430\u0443\u0434\u0438\u043e\u0437\u0430\u043f\u0438\u0441\u044c \u043f\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 `duration`\n# \u0447\u0438\u0442\u0430\u0435\u043c \u0444\u0430\u0439\u043b\n\nwith sR.AudioFile(file_path) as source:\n\n  audio = r.record(source, duration=5)\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u0435\n\nresult = r.recognize_google(audio, language='ru')\n\nresult\n\n\u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `duration` \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u043e\u0442\u0440\u0435\u0437\u043a\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043e\u0442 0), \u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 `offset` \u043c\u043e\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0441 \u043a\u0430\u043a\u043e\u0439 \u0441\u0435\u043a\u0443\u043d\u0434\u044b \u043d\u0430\u0447\u0430\u0442\u044c \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u0435\n# \u0447\u0438\u0442\u0430\u0435\u043c \u0444\u0430\u0439\u043b\n\nwith sR.AudioFile(file_path) as source:\n\n  audio = r.record(source, offset=5)\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u0435\n\nresult = r.recognize_google(audio, language='ru')\n\nresult\n# \u0447\u0438\u0442\u0430\u0435\u043c \u0444\u0430\u0439\u043b\n\nwith sR.AudioFile(file_path) as source:\n\n  audio = r.record(source, offset=2, duration=5)\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u0435\n\nresult = r.recognize_google(audio, language='ru')\n\nresult\n\n# Whisper AI\n## \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Whisper \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\n\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f Whisper \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 openai-whisper\n# \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\n\n!pip install -U openai-whisper\n\n### \u0411\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\nimport whisper\n\nfrom pprint import pprint\n\n\n\n# \u043f\u0440\u0438\u043c\u0435\u0440 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f\n\nmodel = whisper.load_model(\"base\")\n\nresult = model.transcribe(\"/content/drive/MyDrive/audio/manager.mp3\")\n\nprint(result['text'])\n# \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \"medium\"\n\nmodel = whisper.load_model(\"medium\")\n\nresult2 = model.transcribe(\"/content/drive/MyDrive/audio/manager.mp3\")\n\nprint(result2['text'])\n# \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \"large\"\n\nmodel = whisper.load_model(\"large\")\n\nresult3 = model.transcribe(\"/content/drive/MyDrive/audio/manager.mp3\")\n\nprint(result3['text'])\n# \u0447\u0442\u043e \u0435\u0449\u0451 \u0435\u0441\u0442\u044c \u0432 'result'\n\npprint(result3)\nimport pandas as pd\n\n\n\n# \u0437\u0430\u043f\u0438\u0448\u0435\u043c \u0432\u0441\u0435 \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u044b \u0432 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430\n\ndf = pd.DataFrame(result3[\"segments\"])\n\ndf\n\n### \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a\n# \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 'large' \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c task='translate'\n\nmodel = whisper.load_model(\"large\")\n\nresult = model.transcribe(\"/content/drive/MyDrive/audio/manager.mp3\",\n\n                          task=\"translate\")\n\nprint(result['text'])\n\n### \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 initial_prompt\n# \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 'medium' \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c 'initial_prompt'\n\nmodel = whisper.load_model(\"medium\")\n\nresult = model.transcribe(\"/content/drive/MyDrive/audio/manager.mp3\",\n\n                          initial_prompt='\u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0432\u0438\u0436\u0435\u043d\u0438\u044f')\n\nprint(result['text'])\n\n### \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u044f\u0437\u044b\u043a\u0430\nimport whisper\n\n\n\n# \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0431\u0430\u0437\u043e\u0432\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c\n\nmodel = whisper.load_model(\"base\")\n\n\n\n# \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0430\u0443\u0434\u0438\u043e\n\naudio = whisper.load_audio(\"/content/drive/MyDrive/audio/manager.mp3\")\n\n\n\n# \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 30 \u0441\u0435\u043a\u0443\u043d\u0434 \u0430\u0443\u0434\u0438\u043e (\u0435\u0441\u043b\u0438 \u0430\u0443\u0434\u0438\u043e \u043c\u0435\u043d\u044c\u0448\u0435, \u0442\u043e \u0434\u043e\u0431\u0438\u0432\u0430\u0435\u043c \u043d\u0443\u043b\u044f\u043c\u0438)\n\naudio = whisper.pad_or_trim(audio)\n\n\n\n# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c log-Mel \u0441\u043f\u0435\u043a\u0442\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0435\u0451 \u043d\u0430 \u0442\u043e \u0436\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e, \u0433\u0434\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043c\u043e\u0434\u0435\u043b\u044c\n\nmel = whisper.log_mel_spectrogram(audio).to(model.device)\n\n\n\n# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u0435\u0439 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u043d\u043d\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430\n\n_, probs = model.detect_language(mel)\n\nprint(f\"\u0420\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u043d\u043d\u044b\u0439 \u044f\u0437\u044b\u043a: {max(probs, key=probs.get)}\")\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0447\u0438\n\noptions = whisper.DecodingOptions()\n\nresult = whisper.decode(model, mel, options)\n\n\n\n# \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442\n\nprint(result.text)\nimport matplotlib.pyplot as plt\n\n\n\n# \u0432\u044b\u0432\u0435\u0434\u0435\u043c log-Mel \u0441\u043f\u0435\u043a\u0442\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\n\nplt.figure(figsize=(20,10))\n\nplt.imshow(mel.cpu())\n\nplt.show()\n# \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u044f\u0437\u044b\u043a\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438\n\nprobs\n\n## \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Whisper \u043f\u043e API\n\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f Whisper \u043f\u043e API \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u043c\u0435\u0442\u044c \u0430\u043a\u043a\u0430\u0443\u043d\u0442 openai \u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d OPENAI_API_KEY (\u044d\u0442\u043e \u0442\u043e\u0442 \u0436\u0435 \u0442\u043e\u043a\u0435\u043d, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 chatgpt \u043f\u043e API).\n# \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\n\n!pip install --upgrade openai\nimport openai\n\nimport getpass\n\nimport os\n\n\n\n# \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0430\u043f\u0438 \u0442\u043e\u043a\u0435\u043d\n\nopenai_key = getpass.getpass(\"OpenAI API Key:\")\n\nos.environ[\"OPENAI_API_KEY\"] = openai_key\n\nopenai.api_key = openai_key\n\n\u0412 API Whisper \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u0430\u0432\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 25 \u041c\u0411, \u0444\u043e\u0440\u043c\u0430\u0442\u0430 `.mp3`, `.mp4`, `.mpeg`, `.mpga`, `.m4a`, `.wav`, \u0438 `.webm`.\n### \u0411\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\nfrom openai import OpenAI\n\n\n\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 OpenAI\n\nclient = OpenAI()\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0447\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430\n\naudio_file= open(\"/content/drive/MyDrive/audio/manager.mp3\", \"rb\")\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0442\u0440\u0430\u043d\u0441\u043a\u0440\u0438\u0431\u0430\u0446\u0438\u044e\n\ntranscript = client.audio.transcriptions.create(model=\"whisper-1\",\n\n                                                file=audio_file)\n\n\n\ntranscript.text\n\n### \u0422\u0440\u0430\u043d\u0441\u043a\u0440\u0438\u0431\u0430\u0446\u0438\u044f + \u043f\u0435\u0440\u0435\u0432\u043e\u0434\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 OpenAI\n\nclient = OpenAI()\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0447\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430\n\naudio_file= open(\"/content/drive/MyDrive/audio/manager.mp3\", \"rb\")\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0442\u0440\u0430\u043d\u0441\u043a\u0440\u0438\u0431\u0430\u0446\u0438\u044e + \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a\n\ntranscript = client.audio.translations.create(model=\"whisper-1\",\n\n                                                file=audio_file)\n\n\n\ntranscript.text\n\n### \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 prompt\n\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 (prompt) \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u044b \u0434\u043b\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u043b\u043e\u0432, \u0430\u0431\u0431\u0440\u0435\u0432\u0438\u0430\u0442\u0443\u0440, \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0438\u0438, \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0441\u0442\u0438\u043b\u044f \u043f\u0438\u0441\u044c\u043c\u0430  \u0438 \u0442\u0434.\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 OpenAI\n\nclient = OpenAI()\n\n\n\n# \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0444\u0430\u0439\u043b \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \"rb\"\n\naudio_file= open(\"/content/drive/MyDrive/audio/manager.mp3\", \"rb\")\n\n\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0442\u0440\u0430\u043d\u0441\u043a\u0440\u0438\u0431\u0430\u0446\u0438\u044e \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c prompt\n\ntranscript = client.audio.transcriptions.create(model=\"whisper-1\",\n\n                                                file=audio_file,\n\n                                                prompt='\u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0432\u0438\u0436\u0435\u043d\u0438\u044f')\n\n\n\ntranscript.text\n\n\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f prompt:\n\n\n\nhttps://cookbook.openai.com/examples/whisper_prompting_guide\n# Tinkoff VoiceKit\n\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 Tinkoff VoiceKit \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0430 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435 https://software.tinkoff.ru/auth/login/\n\n\n\n\u041f\u043e\u0441\u043b\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u0430 \u0412\u0430\u0448\u0435\u043c \u0431\u0430\u043b\u0430\u043d\u0441\u0435 \u0431\u0443\u0434\u0435\u0442 1000 \u0440\u0443\u0431\u043b\u0435\u0439, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0431\u0435\u0437\u0432\u043e\u0437\u043c\u0435\u0437\u0434\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0438\u0441.\n\n\n\n\u041f\u043e\u0441\u043b\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c 2 \u043a\u043b\u044e\u0447\u0430 API-key \u0438 SECRET-key. API_KEY \u043c\u043e\u0436\u043d\u043e \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u043b\u0438\u0447\u043d\u043e\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 VoiceKit \u0432 \u043b\u044e\u0431\u043e\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. SECRET_KEY \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u043f\u0435\u0440\u0432\u043e\u0433\u043e API_KEY, \u043f\u043e\u0442\u043e\u043c SECRET_KEY \u0431\u0443\u0434\u0435\u0442 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043a\u0440\u0430\u0439\u043d\u0435 \u0412\u0410\u0416\u041d\u041e \u0441\u0440\u0430\u0437\u0443 \u0435\u0433\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c.\n# \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\n\n!pip install tinkoff-voicekit-client protobuf==3.20.3\nimport getpass\n\n\n\n# \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c API_KEY\n\nAPI_KEY = getpass.getpass(\"Tinkoff API Key:\")\n# \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c SECRET_KEY\n\nSECRET_KEY = getpass.getpass(\"Tinkoff SECRET Key:\")\n\n## \u041c\u0435\u0442\u043e\u0434 **Recognize**\n\n\n\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u044f \u0430\u0443\u0434\u0438\u043e\u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0432 (mp3, wav, s16)\n\u0414\u043b\u044f \u0442\u0440\u0430\u043d\u0441\u043a\u0440\u0438\u0431\u0430\u0446\u0438\u0438 \u0442\u0435\u043a\u0441\u0442\u0430, \u043b\u044e\u0431\u043e\u0439 \u043c\u0435\u0442\u043e\u0434 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432:\n\n\n\n    audio_config = {\"encoding\": \"MPEG_AUDIO\",  \n\n                    \"sample_rate_hertz\": 16000,\n\n                    \"num_channels\": 2}\n\n\n\n    \"encoding\" - \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430, \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c: 'LINEAR16', 'ALAW', 'MULAW', 'LINEAR32F', 'RAW_OPUS', 'MPEG_AUDIO';\n\n\n\n    \"sample_rate_hertz\" - \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u0434\u0438\u0441\u043a\u0440\u0435\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438;\n\n\n\n    \"num_channels\" - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432 \u0437\u0430\u043f\u0438\u0441\u0438 (1 \u0438\u043b\u0438 2).\n\nfrom tinkoff_voicekit_client import ClientSTT\n\nfrom pprint import pprint\n\n\n\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043b\u044e\u0447\u0438\n\nclient = ClientSTT(API_KEY, SECRET_KEY)\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\naudio_config = {\n\n    \"encoding\": \"MPEG_AUDIO\",\n\n    \"sample_rate_hertz\": 16000,\n\n    \"num_channels\": 2,\n\n    }\n\n\n\n# \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 recognize\n\nresponse = client.recognize(\"/content/drive/MyDrive/audio/manager.mp3\",\n\n                            audio_config)\n\npprint(response)", "metadata": {"subid": 0, "total": 2, "source": "https://colab.research.google.com/drive/1XtF7ONpq0Z1_uvHQtqV5lJDxSZF2PqfT?usp=sharing"}}}, {"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "\n## \u041c\u0435\u0442\u043e\u0434 **StreamingRecognize**\n\n\n\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u044f \u0440\u0435\u0447\u0438 \u0432 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438: \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u044b\u0445 \u0437\u0432\u043e\u043d\u043a\u043e\u0432, \u0433\u043e\u043b\u043e\u0441\u043e\u0432\u044b\u0445 \u0430\u0441\u0441\u0438\u0441\u0442\u0435\u043d\u0442\u043e\u0432 \u0438 \u0442.\u043f. \u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043d\u044b\u0445 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432 \u0438 \u043e\u043f\u0446\u0438\u0439.\n# \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 ffmpeg-python\n\n!pip install ffmpeg-python\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043b\u044e\u0447\u0438\n\nclient = ClientSTT(API_KEY, SECRET_KEY)\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\naudio_config = {\n\n    \"encoding\": \"MPEG_AUDIO\",\n\n    \"sample_rate_hertz\": 16000,\n\n    \"num_channels\": 2,\n\n}\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\nstream_config = {\"config\": audio_config}\n\n\n\n# \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 streaming_recognize\n\nwith open(\"/content/drive/MyDrive/audio/manager.mp3\", \"rb\") as source:\n\n    responses = client.streaming_recognize(source, stream_config)\n\n    for response in responses:\n\n        pprint(response)\n\n\u041c\u0435\u0442\u043e\u0434 StreamingRecognize \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u043f\u0446\u0438\u0438 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432. \u0412\u043e\u0442 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0437 \u043d\u0438\u0445:\n\n\n\n    audio_config = {\"max_alternatives\": 1,  \n\n                    \"vad_config\": {},\n\n                    \"enable_automatic_punctuation\": False,\n\n                    \"profanity_filter\": False,\n\n                    \"enable_denormalization\": False}\n\n\n\n    \"max_alternatives\" - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430, [1,15];\n\n\n\n    \"vad_config\" - \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043b\u044f \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0433\u043e\u043b\u043e\u0441\u043e\u0432\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438;\n\n\n\n    \"enable_automatic_punctuation\" - \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0438\u044f;\n\n\n\n    \"profanity_filter\" - \u0444\u0438\u043b\u044c\u0442\u0440 \u043d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043b\u0435\u043a\u0441\u0438\u043a\u0438;\n\n\n\n    \"enable_denormalization\" - \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 (\u0432\u0440\u0435\u043c\u044f, \u0434\u0430\u0442\u0430 \u0438 \u0442\u043f);\n\n\n\n    \"\"\n### \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0442\u0440\u0430\u043d\u0441\u043a\u0440\u0438\u0431\u0430\u0446\u0438\u0438 \u0442\u0435\u043a\u0441\u0442\u0430\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043b\u044e\u0447\u0438\n\nclient = ClientSTT(API_KEY, SECRET_KEY)\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\naudio_config = {\n\n    \"encoding\": \"MPEG_AUDIO\",   # \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\n\n    \"sample_rate_hertz\": 16000, # \u0447\u0430\u0441\u0442\u043e\u0442\u0430\n\n    \"num_channels\": 2,          # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432\n\n    \"max_alternatives\": 3       # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\n\n}\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\nstream_config = {\"config\": audio_config}\n\n\n\n# \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 streaming_recognize\n\nwith open(\"/content/drive/MyDrive/audio/manager.mp3\", \"rb\") as source:\n\n    responses = client.streaming_recognize(source, stream_config)\n\n    for response in responses:\n\n        pprint(response)\n\n### \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c vad_config\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043b\u044e\u0447\u0438\n\nclient = ClientSTT(API_KEY, SECRET_KEY)\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b vad (voice activity detection)\n\nvad_config = {\"silence_duration_threshold\": 3,\n\n              \"silence_prob_threshold\": 0.5}\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\naudio_config = {\n\n    \"encoding\": \"MPEG_AUDIO\",   # \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\n\n    \"sample_rate_hertz\": 16000, # \u0447\u0430\u0441\u0442\u043e\u0442\u0430\n\n    \"num_channels\": 2,          # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432\n\n    \"vad_config\": vad_config    # vad \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\n\n}\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\nstream_config = {\"config\": audio_config}\n\n\n\n# \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 streaming_recognize\n\nwith open(\"/content/drive/MyDrive/audio/manager.mp3\", \"rb\") as source:\n\n    responses = client.streaming_recognize(source, stream_config)\n\n    for response in responses:\n\n        pprint(response)\n\n### \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0438\u044e\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043b\u044e\u0447\u0438\n\nclient = ClientSTT(API_KEY, SECRET_KEY)\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\naudio_config = {\n\n    \"encoding\": \"MPEG_AUDIO\",             # \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\n\n    \"sample_rate_hertz\": 16000,           # \u0447\u0430\u0441\u0442\u043e\u0442\u0430\n\n    \"num_channels\": 2,                    # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432\n\n    \"enable_automatic_punctuation\": True  # \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0438\u044e\n\n}\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\nstream_config = {\"config\": audio_config}\n\n\n\n# \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 streaming_recognize\n\nwith open(\"/content/drive/MyDrive/audio/manager.mp3\", \"rb\") as source:\n\n    responses = client.streaming_recognize(source, stream_config)\n\n    for response in responses:\n\n        pprint(response)\n\n### \u0424\u0438\u043b\u044c\u0442\u0440 \u043d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043b\u0435\u043a\u0441\u0438\u043a\u0438\n\u0424\u0438\u043b\u044c\u0442\u0440 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043b\u044e\u0447\u0438\n\nclient = ClientSTT(API_KEY, SECRET_KEY)\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\naudio_config = {\n\n    \"encoding\": \"LINEAR16\",      # \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\n\n    \"sample_rate_hertz\": 8000,   # \u0447\u0430\u0441\u0442\u043e\u0442\u0430\n\n    \"num_channels\": 1,           # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432\n\n    \"profanity_filter\": False    # \u0444\u0438\u043b\u044c\u0442\u0440 \u043d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043b\u0435\u043a\u0441\u0438\u043a\u0438\n\n}\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\nstream_config = {\"config\": audio_config}\n\n\n\n# \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 streaming_recognize\n\nwith open(\"/content/drive/MyDrive/audio/negative_sample.s16\", \"rb\") as source:\n\n    responses = client.streaming_recognize(source, stream_config)\n\n    for response in responses:\n\n        pprint(response)\n\n\u0424\u0438\u043b\u044c\u0442\u0440 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043b\u044e\u0447\u0438\n\nclient = ClientSTT(API_KEY, SECRET_KEY)\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\naudio_config = {\n\n    \"encoding\": \"LINEAR16\",      # \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\n\n    \"sample_rate_hertz\": 8000,   # \u0447\u0430\u0441\u0442\u043e\u0442\u0430\n\n    \"num_channels\": 1,           # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432\n\n    \"profanity_filter\": True     # \u0444\u0438\u043b\u044c\u0442\u0440 \u043d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043b\u0435\u043a\u0441\u0438\u043a\u0438\n\n}\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\nstream_config = {\"config\": audio_config}\n\n\n\n# \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 streaming_recognize\n\nwith open(\"/content/drive/MyDrive/audio/negative_sample.s16\", \"rb\") as source:\n\n    responses = client.streaming_recognize(source, stream_config)\n\n    for response in responses:\n\n        pprint(response)\n\n### \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u0447\u0438\u0441\u043b\u0430\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043b\u044e\u0447\u0438\n\nclient = ClientSTT(API_KEY, SECRET_KEY)\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\naudio_config = {\n\n    \"encoding\": \"MPEG_AUDIO\",        # \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\n\n    \"sample_rate_hertz\": 48000,      # \u0447\u0430\u0441\u0442\u043e\u0442\u0430\n\n    \"num_channels\": 1,               # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432\n\n    \"enable_denormalization\": True   # \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0435 \u0447\u0438\u0441\u043b\u0430\n\n}\n\n\n\n# \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0430\u0443\u0434\u0438\u043e\n\nstream_config = {\"config\": audio_config}\n\n\n\n# \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 streaming_recognize\n\nwith open(\"/content/drive/MyDrive/audio/obratnyiy-otschet.mp3\", \"rb\") as source:\n\n    responses = client.streaming_recognize(source, stream_config)\n\n    for response in responses:\n\n        pprint(response)", "metadata": {"subid": 1, "total": 2, "source": "https://colab.research.google.com/drive/1XtF7ONpq0Z1_uvHQtqV5lJDxSZF2PqfT?usp=sharing"}}}]